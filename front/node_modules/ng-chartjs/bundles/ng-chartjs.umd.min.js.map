{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng-chartjs/lib/store.service.ts","ng://ng-chartjs/lib/plugins-config.ts","ng://ng-chartjs/lib/ng-chartjs.service.ts","ng://ng-chartjs/lib/colors.ts","ng://ng-chartjs/lib/ng-chartjs.directive.ts","ng://ng-chartjs/lib/plugin-token.ts","ng://ng-chartjs/lib/ng-chartjs.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","StoreService","this","_chartInstances","_chartId","prototype","addChart","id","chart","push","removeChart","splice","getChart","Injectable","providedIn","PluginConfig","plugins","NgChartjsService","storeService","pluginConfig","Chart.plugins","register","DefaultColors","rgba","colour","alpha","concat","join","getRandomInt","min","max","Math","floor","random","formatLineColor","colors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","formatBarColor","hoverBackgroundColor","hoverBorderColor","formatPieColors","map","color","formatPolarAreaColors","getRandomColor","generateColor","index","generateColors","count","colorsArr","Array","getColors","chartType","NgChartjsDirective","element","ngChartjsService","zone","labels","options","noZone","chartClick","EventEmitter","chartHover","initFlag","hasChanges","ngOnInit","_this","ctx","nativeElement","getContext","data","datasets","runOutsideAngular","refresh","ngOnChanges","changes","hasOwnProperty","updateChartData","currentValue","legend","previousValue","display","addData_","adding","removing","orientation","removeData_","assign","resetOption","update","ngOnDestroy","destroy","addData","removeData","getChartBuilder","hasAttribute","newDataValues","isArray","forEach","dataset","label","updateColors","getDatasets","hover","onHover","event","active","emit","onClick","opts","type","inlinePlugins","Chart","Error","elm","newElm","console","log","pop","shift","ElementRef","NgZone","Input","Output","Directive","selector","exportAs","NgChartjsCustomPluginToken","InjectionToken","ngChartjsCustomPluginsFactory","NgChartjsModule","registerPlugin","ngModule","NgChartjsModule_1","providers","provide","useValue","deps","useFactory","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n  private _chartInstances: any[] = [];\n  private _chartId: string[] = [];\n\n  addChart(id: string, chart: any): void {\n    for (let i = 0; i < this._chartId.length; i++) {\n      if (id === this._chartId[i]) {\n        return;\n      }\n    }\n    this._chartId.push(id);\n    this._chartInstances.push(chart);\n  }\n\n  removeChart(id: string): void {\n    for (let i = 0; i < this._chartId.length; i++) {\n      if (id === this._chartId[i]) {\n        this._chartId.splice(i, 1);\n        this._chartInstances.splice(i, 1);  // delete chart instance.\n      }\n    }\n  }\n\n  getChart(id: string): any {\n    for (let i = 0; i < this._chartId.length; i++) {\n      if (id === this._chartId[i]) {\n        return this._chartInstances[i];\n      }\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PluginConfig {\n    plugins: any[] = [];\n}\n\n","import { Injectable } from '@angular/core';\nimport * as Chart from 'chart.js';\nimport { PluginConfig } from './plugins-config';\nimport { StoreService } from './store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgChartjsService {\n\n    constructor(\n      private storeService: StoreService,\n      private pluginConfig: PluginConfig) {\n      const plugins = pluginConfig.plugins;\n      if (plugins.length !== 0 || plugins) {\n        for (let i = 0; i < plugins.length; i++) {\n          if (plugins[i]) {\n            Chart.plugins.register(plugins[i]);\n          }\n        }\n      }\n    }\n    // get chart instance by id\n    getChart(id: string): any {\n      return this.storeService.getChart(id);\n    }\n}\n","export interface Color {\n    backgroundColor?: string | string[];\n    borderWidth?: number | number[];\n    borderColor?: string | string[];\n    borderCapStyle?: string;\n    borderDash?: number[];\n    borderDashOffset?: number;\n    borderJoinStyle?: string;\n\n    pointBorderColor?: string | string[];\n    pointBackgroundColor?: string | string[];\n    pointBorderWidth?: number | number[];\n\n    pointRadius?: number | number[];\n    pointHoverRadius?: number | number[];\n    pointHitRadius?: number | number[];\n\n    pointHoverBackgroundColor?: string | string[];\n    pointHoverBorderColor?: string | string[];\n    pointHoverBorderWidth?: number | number[];\n    pointStyle?: string | string[];\n\n    hoverBackgroundColor?: string | string[];\n    hoverBorderColor?: string | string[];\n    hoverBorderWidth?: number;\n}\n\n// Default colors\nexport const DefaultColors: number[][] = [\n    [63, 81, 181],       // Indogo\n    [0, 150, 136],       // Teal\n    [255, 152, 0],       // Orange\n    [233, 30, 99],       // Pink\n    [156, 39, 176],      // Purple\n    [0, 188, 212],       // Cyan\n    [3, 169, 244],       // Light Blue\n    [96, 125, 139],      // Blue Grey\n    [255, 193, 7],       // Amber\n    [37, 155, 36],       // Green\n    [205, 220, 57],      // Lime\n    [86, 119, 252]       // Blue\n];\n\n// pie | doughnut\nexport interface Colors extends Color {\n    data?: number[];\n    label?: string;\n}\n\nexport function rgba(colour: number[], alpha: number): string {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nexport function getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function formatLineColor(colors: number[]): Color {\n    return {\n        backgroundColor: rgba(colors, 0.35),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.95)\n    };\n}\n\nexport function formatBarColor(colors: number[]): Color {\n    return {\n        backgroundColor: rgba(colors, 0.75),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 1),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\n\nexport function formatPieColors(colors: number[][]): Colors {\n    return {\n        backgroundColor: colors.map((color: number[]) => rgba(color, 0.76)),\n        borderColor: colors.map(() => '#fff'),\n        pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n        pointBorderColor: colors.map(() => '#fff'),\n        pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n        pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n    };\n}\n\nexport function formatPolarAreaColors(colors: number[][]): Color {\n    return {\n        backgroundColor: colors.map((color: number[]) => rgba(color, 0.75)),\n        borderColor: colors.map((color: number[]) => rgba(color, 1)),\n        hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n        hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n    };\n}\n\nexport function getRandomColor(): number[] {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n\n/**\n* @method Generate colors for line|bar charts\n* @param index he index of the default color array. eg. 0, 1\n* @return number[]\n* @author vincent 2019-01-22\n* @version 0.0.0\n* @example\n* @log 1. vincent,2019-01-22,done\n*/\nexport function generateColor(index: number): number[] {\n    return DefaultColors[index] || getRandomColor();\n}\n\n\n/**\n* @method Generate colors for pie|doughnut charts\n* @param count Length of data. eg. datasets.data.length\n* @return number[][]\n* @author vincent 2019-01-22\n* @version 0.0.0\n* @example\n* @log 1. vincent,2019-01-22,done\n*/\nexport function generateColors(count: number): number[][] {\n    const colorsArr: number[][] = new Array(count);\n    for (let i = 0; i < count; i++) {\n        colorsArr[i] = DefaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n\n\n/**\n* @method Generate colors by chart type\n* @param chartType The type of chart you are using. eg. line,bar\n* @param index The index of the default color array. eg. DefaultColors[index]\n* @param count Length of data. eg. datasets.data.length\n* @return Color or number[]\n* @author vincent 2019-01-22\n* @version 0.0.0\n* @example\n* @log 1. vincent,2019-01-22,done\n*/\nexport function getColors(chartType: string, index: number, count: number): Color | number[] {\n    if (chartType === 'pie' ||\n        chartType === 'doughnut' ||\n        chartType === 'bubble' ||\n        chartType === 'scatter') {\n        return formatPieColors(generateColors(count));\n    }\n\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n\n    return generateColor(index);\n}\n","import {\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  EventEmitter,\n  ElementRef,\n  Input,\n  Output,\n  SimpleChanges,\n  Directive,\n  NgZone\n} from '@angular/core';\nimport * as Chart from 'chart.js';\nimport { StoreService } from './store.service';\nimport { NgChartjsService } from './ng-chartjs.service';\nimport { getColors, Colors } from './colors';\n\nexport type Labels = Array<string | string[] | number | number[] | Date | Date[] | any | any[]>;\nexport type Orientation = 'oldest' | 'latest';\nexport interface NgChartjsEvent { event: MouseEvent; active: Array<{}>; }\n\n/* tslint:disable-next-line */\n@Directive({ selector: 'canvas[ngChartjs]', exportAs: 'ngChartjs' })\nexport class NgChartjsDirective implements OnDestroy, OnChanges, OnInit {\n\n  // å¾è¡¨çç¹éï¼å®åºè¯¥æ¯æ°ç»<number []>ä»ç¨äºçº¿ï¼æ¡åé·è¾¾ï¼å¦åæ°å­[];\n  @Input() data: number[] | any[];\n  // ç¸å½äºchart.jså data: {datasets: [{...}]}\n  @Input() datasets: Chart.ChartDataSets[];\n  // xè½´æ ç­¾ãè¿å¯¹å¾è¡¨æ¥è¯´æ¯å¿è¦çï¼çº¿ï¼æ¡åé·è¾¾ãå¹¶ä¸åªæ¯å¾è¡¨çæ ç­¾ï¼æ¬åï¼ï¼polarAreaï¼pieådoughnut\n  @Input() labels: Labels = [];\n  // ç¸å½äºchart.jsçoption\n  @Input() options: Chart.ChartOptions = {};\n  // åèæä»¶å±æ§\n  @Input() inlinePlugins: any[];\n  // chartType line, bar, radar, pie, polarArea, doughnut\n  @Input() chartType: Chart.ChartType;\n  // æ°æ®é¢è²ï¼å¦ææ²¡ææå®ï¼å°ä½¿ç¨é»è®¤å|æéæºé¢è²\n  @Input() colors: Colors[];\n  // æ¯å¦æ¾ç¤ºå¾ä¾\n  @Input() legend: boolean;\n\n  @Input() adding: { labels: Labels[], data: any[][] };\n  @Input() removing: { orientation: Orientation };  // orientation is 'oldest' or 'latest\n  @Input() resetOption: Chart.ChartType;\n\n  @Input() noZone = true; // disable angular NgZone\n  @Input() id: string = null; // chart instance id\n\n  // é¼ æ ç¹å»å¾è¡¨ææçåºå\n  @Output() chartClick: EventEmitter<NgChartjsEvent> = new EventEmitter();\n  // é¼ æ æ¬æµ®å¨æ ç­¾æèæ´»è·çç¹ä¸é¢æ¶\n  @Output() chartHover: EventEmitter<NgChartjsEvent> = new EventEmitter();\n\n  // get Chartjs object\n  chart: Chart;\n  private ctx: CanvasRenderingContext2D;\n  private initFlag = false;\n  private hasChanges = false;\n\n  private element: ElementRef;\n\n  public constructor(\n    element: ElementRef,\n    private ngChartjsService: NgChartjsService,\n    private storeService: StoreService,\n    private zone: NgZone) {\n    this.element = element;   // è·åæä»¤æå¨canvasåç´ \n  }\n\n  ngOnInit(): void {\n    this.ctx = this.element.nativeElement.getContext('2d'); // è·ååç´ çctx\n    this.initFlag = true; // æ¯å¦åå§åäºçæ å¿\n\n    if (this.data || this.datasets) { // å¤æ­dataådatasetsæä¸ä¸ªææ°æ®å°±å·æ°\n      if (this.noZone) {\n        this.zone.runOutsideAngular(() => {\n         this.refresh();\n        });\n      } else {\n        this.refresh();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // TODO: æä»¶ååå·æ°ï¼å¼æ¾å·æ°æé®\n    if (this.initFlag) {\n      // Check if the changes are in the data or datasets\n      if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n        if (changes.data) {\n          this.updateChartData(changes.data.currentValue);\n        } else {\n          this.updateChartData(changes.datasets.currentValue);\n        }\n        this.hasChanges = true;\n      }\n\n      if (changes.hasOwnProperty('labels')) {\n        this.chart.data.labels = changes.labels.currentValue;\n        this.hasChanges = true;\n      }\n\n      if (changes.hasOwnProperty('legend')) {\n        if (changes.legend.currentValue !== changes.legend.previousValue) {\n          this.chart.options.legend.display = changes.legend.currentValue;\n          this.hasChanges = true;\n        }\n      }\n\n      if (changes.hasOwnProperty('adding')) {\n        this.addData_(changes.adding.currentValue.labels, changes.adding.currentValue.data);\n        this.hasChanges = true;\n      }\n\n      if (changes.hasOwnProperty('removing')) {\n        if (changes.removing.currentValue.orientation === 'oldest' || changes.removing.currentValue.orientation === 'latest') {\n          this.removeData_(changes.removing.currentValue.orientation);\n          this.hasChanges = true;\n        }\n      }\n\n      if (changes.hasOwnProperty('chartType')) {\n        this.refresh();\n      }\n\n      if (changes.hasOwnProperty('resetOption')) {\n        Object.assign(this.chart.options, changes.resetOption.currentValue);\n        this.hasChanges = true;\n      }\n\n      if (this.hasChanges) {\n        this.chart.update();\n        this.hasChanges = false;\n      }\n\n      // change chart id\n      if (changes.hasOwnProperty('id')) {\n        this.removeChart(changes.id.previousValue);\n        this.addChart(changes.id.currentValue);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n\n      this.removeChart(this.id);\n    }\n  }\n\n  // update chartjs\n  update(): void {\n    this.chart.update();\n  }\n\n  // Dynamic add data\n  addData(labels: Labels[], data: any[][]): void {\n    this.addData_(labels, data);\n    this.update();\n  }\n  // Dynamic remove data, orientation is 'ildest' or 'latest'\n  removeData(orientation: Orientation): void {\n    this.removeData_(orientation);\n    this.update();\n  }\n\n  private refresh(): void {\n    this.ngOnDestroy();\n    this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n    this.addChart(this.id);\n  }\n\n  private removeChart(id: string): void {\n    if (this.element.nativeElement.hasAttribute('id')) {\n      this.storeService.removeChart(this.element.nativeElement.id);\n      return;\n    }\n    if (id !== null && id !== undefined) {\n      this.storeService.removeChart(id);  // delete chart instance.\n    }\n  }\n\n  private addChart(id: string): void {\n    if (this.element.nativeElement.hasAttribute('id')) {\n      this.storeService.addChart(this.element.nativeElement.id, this.chart);\n      return;\n    }\n    if (id !== null && id !== undefined) {\n      this.storeService.addChart(id, this.chart);\n    }\n  }\n\n  private updateChartData(newDataValues: number[] | any[]): void {\n    if (Array.isArray(newDataValues[0].data)) {\n      this.chart.data.datasets.forEach((dataset: Chart.ChartDataSets, i: number) => {\n        dataset.data = newDataValues[i].data;\n\n        if (newDataValues[i].label) {\n          dataset.label = newDataValues[i].label;\n        }\n      });\n    } else {\n      this.chart.data.datasets[0].data = newDataValues;\n    }\n    // update colors\n    this.chart.data.datasets = this.updateColors(this.chart.data.datasets);\n  }\n\n  private getChartBuilder(ctx: CanvasRenderingContext2D/*, data:Array<any>, options:any*/): Chart {\n    const datasets = this.getDatasets();\n\n    const options: Chart.ChartOptions = Object.assign({}, this.options); // æ·±å¤å¶options\n    if (this.legend === false) {  // è®¾ç½®optionsçlegend TODO: åç»­è¿ä¸ªå±æ§å»é¤ï¼ç´æ¥å¨optionsåè®¾ç½®\n      options.legend = { display: false };\n    }\n    // hock for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (event: MouseEvent, active: Array<{}>) => {\n        if (active && !active.length) {\n          return;\n        }\n        this.chartHover.emit({ event, active });\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event: MouseEvent, active: Array<{}>) => {\n        this.chartClick.emit({ event, active });\n      };\n    }\n\n    const opts = {\n      type: this.chartType,\n      data: {\n        labels: this.labels,\n        datasets: datasets   // TODO: åç»­æ´æ¹è¿ä¸ªå±æ§åå­ï¼å¦åè­¦å\n      },\n      options: options,   // TODO: åç»­æ´æ¹è¿ä¸ªå±æ§åå­ï¼å¦åè­¦å\n      plugins: this.inlinePlugins\n    };\n\n    return new Chart(ctx, opts);\n  }\n\n  // è·å chart.jsçdatasetsæ°æ®\n  private getDatasets(): Chart.ChartDataSets[] {\n    let datasets: Chart.ChartDataSets[] = void 0;\n    // in case if datasets is not provided, but data is present\n    if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n      if (Array.isArray(this.data[0])) {\n        datasets = (this.data as number[][]).map((data: number[], index: number) => {\n          return { data, label: this.labels[index] || `Label ${index}` };\n        });\n      } else {\n        datasets = [{ data: this.data, label: `Label 0` }];\n      }\n    }\n\n    datasets = this.updateColors(datasets); // update colors\n\n    if (!datasets) {\n      throw new Error(`ng-chartjs configuration error,\n      data or datasets field are required to render char ${this.chartType}`);\n    }\n\n    return datasets;\n  }\n\n  // update dataset colors\n  private updateColors(datasets: Chart.ChartDataSets[]): Chart.ChartDataSets[] {\n    if (this.datasets && this.datasets.length || (datasets && datasets.length)) {\n      // fix elm type, pre type is number\n      datasets = (this.datasets || datasets).map((elm: Chart.ChartDataSets, index: number) => {\n        const newElm: Chart.ChartDataSets = Object.assign({}, elm);\n        if (this.colors && this.colors.length) {\n          Object.assign(newElm, this.colors[index]);\n        } else {\n          Object.assign(newElm, getColors(this.chartType, index, newElm.data.length));\n        }\n        return newElm;\n      });\n    }\n    return datasets;\n  }\n\n  private addData_(labels: Labels[], data: any[][]): void {\n    if (labels.length === 0 || data.length === 0) {\n      return;\n    }\n    // update labels\n    labels.forEach((label) => { this.chart.data.labels.push(label); });\n\n    this.chart.data.datasets.forEach((dataset, index) => {\n      if (data[index]) {\n        for (let i = 0; i < data[index].length; i++) {\n          dataset.data.push(data[index][i]);\n        }\n      } else {\n        console.log('The added data does not match the original data');\n        return;\n      }\n    });\n  }\n\n  private removeData_(orientation: Orientation): void {\n    // fix: support to oldest feature\n    if (orientation === 'latest') {\n      this.chart.data.labels.pop();\n      this.chart.data.datasets.forEach((dataset: Chart.ChartDataSets) => {\n        dataset.data.pop();\n      });\n    } else if (orientation === 'oldest') {\n      this.chart.data.labels.shift();\n      this.chart.data.datasets.forEach((dataset: Chart.ChartDataSets) => {\n        dataset.data.shift();\n      });\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NgChartjsCustomPluginToken: InjectionToken<any> = new InjectionToken<any[]>('[ngx-chart-js] Global Default Plugin');\n\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { NgChartjsDirective } from './ng-chartjs.directive';\nimport { NgChartjsCustomPluginToken } from './plugin-token';\nimport { PluginConfig } from './plugins-config';\nimport { NgChartjsService } from './ng-chartjs.service';\n\nexport function ngChartjsCustomPluginsFactory(plugins: any[]): PluginConfig {\n  const pluginConfig = new PluginConfig();\n  pluginConfig.plugins = plugins;\n  return pluginConfig;\n}\n\n@NgModule({\n  imports: [],\n  declarations: [NgChartjsDirective],\n  exports: [NgChartjsDirective],\n  providers: [NgChartjsService]\n})\nexport class NgChartjsModule {\n  /**\n   * Register a plugin.\n   * @param plugin\n   */\n  public static registerPlugin(plugins: any[] = []): ModuleWithProviders<NgChartjsModule> {\n    return {\n      ngModule: NgChartjsModule,\n      providers: [\n        {\n          provide: NgChartjsCustomPluginToken,\n          useValue: plugins\n        },\n        {\n          deps: [NgChartjsCustomPluginToken],\n          provide:  PluginConfig,\n          useFactory: ngChartjsCustomPluginsFactory\n        }\n      ]\n    };\n  }\n}\n"]}
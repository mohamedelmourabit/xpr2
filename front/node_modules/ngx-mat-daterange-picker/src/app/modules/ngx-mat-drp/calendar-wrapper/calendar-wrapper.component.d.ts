import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { MatCalendar } from '@angular/material/datepicker';
import { ConfigStoreService } from '../services/config-store.service';
import * as ɵngcc0 from '@angular/core';
export declare class CalendarWrapperComponent implements OnChanges {
    private configStore;
    matCalendar: MatCalendar<Date>;
    readonly selectedDateChange: EventEmitter<Date>;
    dateFormat: string;
    selectedDate: Date;
    prefixLabel: string;
    minDate: Date;
    maxDate: Date;
    weekendFilter: (d: Date) => boolean;
    constructor(configStore: ConfigStoreService);
    ngOnChanges(changes: SimpleChanges): void;
    onSelectedChange(date: any): void;
    onYearSelected(e: any): void;
    onUserSelection(e: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CalendarWrapperComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CalendarWrapperComponent, "calendar-wrapper", never, { "selectedDate": "selectedDate"; "prefixLabel": "prefixLabel"; "minDate": "minDate"; "maxDate": "maxDate"; }, { "selectedDateChange": "selectedDateChange"; }, never, never>;
}

//# sourceMappingURL=calendar-wrapper.component.d.ts.map
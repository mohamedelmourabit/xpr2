!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@angular/animations"),require("@angular/cdk/overlay"),require("@angular/cdk/portal"),require("rxjs/operators"),require("@angular/common"),require("@angular/material/datepicker"),require("@angular/material/form-field"),require("@angular/material/core"),require("@angular/material/input"),require("@angular/material/button"),require("@angular/material/tooltip")):"function"==typeof define&&define.amd?define("ngx-mat-daterange-picker",["exports","@angular/core","rxjs","@angular/animations","@angular/cdk/overlay","@angular/cdk/portal","rxjs/operators","@angular/common","@angular/material/datepicker","@angular/material/form-field","@angular/material/core","@angular/material/input","@angular/material/button","@angular/material/tooltip"],t):t(e["ngx-mat-daterange-picker"]={},e.ng.core,e.rxjs,e.ng.animations,e.ng.cdk.overlay,e.ng.cdk.portal,e.Rx.Observable.prototype,e.ng.common,e.ng.material.datepicker,e.ng.material["form-field"],e.ng.material.core,e.ng.material.input,e.ng.material.button,e.ng.material.tooltip)}(this,function(e,o,a,t,n,i,s,r,p,l,c,d,u,g){"use strict";var m=new o.InjectionToken("date"),f=function(){function e(e,t){this._fromDate=e,this._toDate=t,this.rangeUpdate$=new a.Subject}return Object.defineProperty(e.prototype,"fromDate",{get:function(){return this._fromDate},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"toDate",{get:function(){return this._toDate},enumerable:!0,configurable:!0}),e.prototype.updateRange=function(e,t){void 0===e&&(e=this._fromDate),void 0===t&&(t=this._toDate),this._fromDate=e,this._toDate=t,this.rangeUpdate$.next({fromDate:this._fromDate,toDate:this._toDate})},e}();f.decorators=[{type:o.Injectable}],f.ctorParameters=function(){return[{type:Date,decorators:[{type:o.Inject,args:[m]}]},{type:Date,decorators:[{type:o.Inject,args:[m]}]}]};var h=function(){function e(){this.defaultOptions={excludeWeekends:!1,animation:!0,locale:"en-US",fromMinMax:{fromDate:null,toDate:null},toMinMax:{fromDate:null,toDate:null}}}return Object.defineProperty(e.prototype,"ngxDrpOptions",{get:function(){return this._ngxDrpOptions},set:function(e){this._ngxDrpOptions=Object.assign({},this.defaultOptions,e)},enumerable:!0,configurable:!0}),e}();h.decorators=[{type:o.Injectable}],h.ctorParameters=function(){return[]};var y={transformPanel:t.trigger("transformPickerOverlay",[t.state("void",t.style({opacity:0,transform:"scale(1, 0)"})),t.state("enter",t.style({opacity:1,transform:"scale(1, 1)"})),t.transition("void => enter",t.group([t.animate("400ms cubic-bezier(0.25, 0.8, 0.25, 1)")])),t.transition("* => void",t.animate("100ms linear",t.style({opacity:0})))])},v=function(){function e(e,t,a){this.rangeStoreService=e,this.configStoreService=t,this.overlayRef=a,this.presets=[]}return e.prototype.ngOnInit=function(){var e,t;this.fromDate=this.rangeStoreService.fromDate,this.toDate=this.rangeStoreService.toDate,this.startDatePrefix=this.configStoreService.ngxDrpOptions.startDatePrefix||"FROM:",this.endDatePrefix=this.configStoreService.ngxDrpOptions.endDatePrefix||"TO:",this.applyLabel=this.configStoreService.ngxDrpOptions.applyLabel||"Apply",this.cancelLabel=this.configStoreService.ngxDrpOptions.cancelLabel||"Cancel",this.presets=this.configStoreService.ngxDrpOptions.presets,this.shouldAnimate=this.configStoreService.ngxDrpOptions.animation?"enter":"noop",e=this.configStoreService.ngxDrpOptions.fromMinMax,this.fromMinDate=e.fromDate,this.fromMaxDate=e.toDate,t=this.configStoreService.ngxDrpOptions.toMinMax,this.toMinDate=t.fromDate,this.toMaxDate=t.toDate},e.prototype.updateFromDate=function(e){this.fromDate=e},e.prototype.updateToDate=function(e){this.toDate=e},e.prototype.updateRangeByPreset=function(e){this.updateFromDate(e.range.fromDate),this.updateToDate(e.range.toDate)},e.prototype.applyNewDates=function(e){this.rangeStoreService.updateRange(this.fromDate,this.toDate),this.disposeOverLay()},e.prototype.discardNewDates=function(e){this.disposeOverLay()},e.prototype.disposeOverLay=function(){this.overlayRef.dispose()},e}();v.decorators=[{type:o.Component,args:[{selector:"ngx-mat-drp-picker-overlay",template:'<div [@transformPickerOverlay]="shouldAnimate" class="ngx-mat-drp-calendar-container">\n\n  <div class="ngx-mat-drp-calendar-item">\n    <calendar-wrapper \n    [prefixLabel]="startDatePrefix"\n    [selectedDate]="fromDate"\n    [minDate]="fromMinDate"\n    [maxDate]="fromMaxDate"\n    (selectedDateChange)="updateFromDate($event)">\n  </calendar-wrapper>\n  </div>\n  <div class="ngx-mat-drp-calendar-item">\n    <calendar-wrapper \n    [prefixLabel]="endDatePrefix"\n    [selectedDate]="toDate"\n    [minDate]="toMinDate"\n    [maxDate]="toMaxDate" \n    (selectedDateChange)="updateToDate($event)">\n  </calendar-wrapper>\n  </div>\n  <div class="ngx-mat-drp-calendar-item">\n    <div class="ngx-mat-drp-menu">\n      <mat-drp-presets [presets]="presets" (presetChanged)="updateRangeByPreset($event)"></mat-drp-presets>\n      <div class="ngx-mat-drp-controls">\n        <button mat-button color="primary" (click)="applyNewDates($event)">{{applyLabel}}</button>\n        <button mat-button (click)="discardNewDates($event)">{{cancelLabel}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:['.ngx-mat-drp-calendar-container{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;min-width:650px;height:300px}.ngx-mat-drp-calendar-item{-ms-flex-preferred-size:33.33%;flex-basis:33.33%;min-width:210px;padding:1em;font-family:Roboto,"Helvetica Neue",sans-serif;font-size:14px;font-weight:400}.ngx-mat-drp-menu{height:100%}.ngx-mat-drp-controls{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;margin:10% auto}.ngx-mat-drp-overlay{-webkit-box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);background:#fff;border-radius:2px}.ngx-mat-drp-overlay-backdrop{background-color:rgba(0,0,0,.2);opacity:.2}'],animations:[y.transformPanel],encapsulation:o.ViewEncapsulation.None}]}],v.ctorParameters=function(){return[{type:f},{type:h},{type:n.OverlayRef}]};var x={panelClass:"ngx-mat-drp-overlay",hasBackdrop:!0,backdropClass:"ngx-mat-drp-overlay-backdrop",shouldCloseOnBackdropClick:!0},D=function(){function e(e,t){this.overlay=e,this.injector=t}return e.prototype.open=function(e,t){void 0===e&&(e={}),this.hostElemRef=t;var a=Object.assign({},x,e),n=this.createOverlay(a),r=this.createInjector(n),o=new i.ComponentPortal(v,null,r);return n.attach(o),n.backdropClick().pipe(s.takeWhile(function(){return a.shouldCloseOnBackdropClick})).subscribe(function(){return n.dispose()}),n},e.prototype.createOverlay=function(e){var t=this.getOverlayConfig(e);return this.overlay.create(t)},e.prototype.getOverlayConfig=function(e){var t=this.overlay.position().flexibleConnectedTo(this.hostElemRef).withFlexibleDimensions(!1).withViewportMargin(8).withDefaultOffsetY(12).withPositions([{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom"}]);return new n.OverlayConfig({hasBackdrop:e.hasBackdrop,backdropClass:e.backdropClass,panelClass:e.panelClass,scrollStrategy:this.overlay.scrollStrategies.block(),positionStrategy:t})},e.prototype.createInjector=function(e){var t=new WeakMap;return t.set(n.OverlayRef,e),new i.PortalInjector(this.injector,t)},e}();D.decorators=[{type:o.Injectable}],D.ctorParameters=function(){return[{type:n.Overlay},{type:o.Injector}]};var b=function(){function e(e,t,a,n,r){this.changeDetectionRef=e,this.calendarOverlayService=t,this.rangeStoreService=a,this.configStoreService=n,this.datePipe=r,this.selectedDateRangeChanged=new o.EventEmitter,this.selectedDateRange=""}return e.prototype.ngOnInit=function(){var n=this;this.configStoreService.ngxDrpOptions=this.options,this.options.placeholder=this.options.placeholder||"Choose a date",this.rangeUpdate$=this.rangeStoreService.rangeUpdate$.subscribe(function(e){var t=n.formatToDateString(e.fromDate,n.options.format),a=n.formatToDateString(e.toDate,n.options.format);n.selectedDateRange=t+" - "+a,n.selectedDateRangeChanged.emit(e)}),this.rangeStoreService.updateRange(this.options.range.fromDate,this.options.range.toDate),this.changeDetectionRef.detectChanges()},e.prototype.ngOnDestroy=function(){this.rangeUpdate$&&this.rangeUpdate$.unsubscribe()},e.prototype.formatToDateString=function(e,t){return this.datePipe.transform(e,t)},e.prototype.openCalendar=function(e){this.calendarOverlayService.open(this.options.calendarOverlayConfig,this.calendarInput)},e.prototype.resetDates=function(e){this.rangeStoreService.updateRange(e.fromDate,e.toDate)},e}();b.decorators=[{type:o.Component,args:[{selector:"ngx-mat-drp",template:'<div> \n  \n  <mat-form-field class="ngx-mat-drp-date-display">\n    <input class="ngx-mat-drp-date-input"\n          matInput [placeholder]="options.placeholder"\n          [value]="selectedDateRange"\n          [matTooltip]="selectedDateRange"\n          (click)="openCalendar($event)"\n          readonly\n          #calendarInput >\n    <div matSuffix \n          class="ngx-mat-drp-calendar"\n          (click)="openCalendar($event)">\n    </div>\n  </mat-form-field>\n  \n</div>    \n',styles:['.ngx-mat-drp-date-display{min-width:230px}.ngx-mat-drp-date-input{text-overflow:ellipsis;color:#4169e1}.ngx-mat-drp-calendar{background-image:url(\'data:image/svg+xml,<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">    <path d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"/>    <path d="M0 0h24v24H0z" fill="none"/></svg>\');width:24px;height:24px}'],providers:[D,f,h,r.DatePipe],changeDetection:o.ChangeDetectionStrategy.OnPush}]}],b.ctorParameters=function(){return[{type:o.ChangeDetectorRef},{type:D},{type:f},{type:h},{type:r.DatePipe}]},b.propDecorators={calendarInput:[{type:o.ViewChild,args:["calendarInput"]}],selectedDateRangeChanged:[{type:o.Output}],options:[{type:o.Input}]};var S=function(){function e(e){this.configStore=e,this.selectedDateChange=new o.EventEmitter,this.weekendFilter=function(e){return!0},this.dateFormat=e.ngxDrpOptions.format,e.ngxDrpOptions.excludeWeekends&&(this.weekendFilter=function(e){var t=e.getDay();return 0!==t&&6!==t})}return e.prototype.ngOnChanges=function(e){this.matCalendar.activeDate=e.selectedDate.currentValue},e.prototype.onSelectedChange=function(e){this.selectedDateChange.emit(e)},e.prototype.onYearSelected=function(e){},e.prototype.onUserSelection=function(e){},e}();S.decorators=[{type:o.Component,args:[{selector:"calendar-wrapper",template:'<div>\n\n  \x3c!-- <mat-divider></mat-divider> --\x3e\n  <span class="ngx-mat-drp-date-label">\n    <label>{{prefixLabel}}</label>\n    <label class="ngx-mat-drp-selected-date-label">{{selectedDate | date:dateFormat}}</label>\n  </span>\n  \x3c!-- <mat-divider></mat-divider> --\x3e\n\n  <mat-calendar \n    [startAt]="selectedDate"\n    [selected]="selectedDate"\n    [minDate]="minDate"\n    [maxDate]="maxDate"\n    (selectedChange)="onSelectedChange($event)"\n    (yearSelected)="onYearSelected($event)"\n    (_userSelection)="onUserSelection($event)"\n    [dateFilter]="weekendFilter">\n  </mat-calendar>\n\n</div>',styles:[".ngx-mat-drp-date-label{background:#fafafa;margin:15px;padding:4px 2px;width:100%;font-size:14px;font-weight:500}.ngx-mat-drp-selected-date-label{color:rgba(0,0,0,.38);padding-left:5%}"],changeDetection:o.ChangeDetectionStrategy.OnPush}]}],S.ctorParameters=function(){return[{type:h}]},S.propDecorators={matCalendar:[{type:o.ViewChild,args:[p.MatCalendar]}],selectedDateChange:[{type:o.Output}],selectedDate:[{type:o.Input}],prefixLabel:[{type:o.Input}],minDate:[{type:o.Input}],maxDate:[{type:o.Input}]};var C=function(){function e(){this.presetChanged=new o.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.setPresetPeriod=function(e){this.presetChanged.emit(e)},e}();C.decorators=[{type:o.Component,args:[{selector:"mat-drp-presets",template:'<div>\n  <ul class="ngx-mat-drp-presets-list">\n    <li *ngFor="let preset of presets" (click)="setPresetPeriod(preset)"> {{preset.presetLabel}} </li>\n  </ul>\n</div>',styles:[".ngx-mat-drp-presets-list{list-style-type:none;margin:0;padding:0}.ngx-mat-drp-presets-list li{margin:5px 0;padding:4%;cursor:pointer;background:#fafafa;color:#3f51b5;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-mat-drp-presets-list li:hover{background:#3f51b5;color:#fff}"],changeDetection:o.ChangeDetectionStrategy.OnPush}]}],C.ctorParameters=function(){return[]},C.propDecorators={presets:[{type:o.Input}],presetChanged:[{type:o.Output}]};var O=new Date,k=function(){};k.decorators=[{type:o.NgModule,args:[{imports:[r.CommonModule,l.MatFormFieldModule,p.MatDatepickerModule,c.MatNativeDateModule,d.MatInputModule,u.MatButtonModule,g.MatTooltipModule,n.OverlayModule],declarations:[b,S,v,C],providers:[{provide:m,useValue:O}],entryComponents:[v],exports:[b]}]}],e.NgxMatDrpModule=k,e.NgxMatDrpComponent=b,e.PickerOverlayComponent=v,e.CalendarWrapperComponent=S,e.PresetsComponent=C,e.CalendarOverlayService=D,e.ConfigStoreService=h,e.DATE=m,e.RangeStoreService=f,e.ɵa=y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-mat-daterange-picker.umd.min.js.map

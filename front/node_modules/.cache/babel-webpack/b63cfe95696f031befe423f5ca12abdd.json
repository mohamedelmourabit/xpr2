{"ast":null,"code":"import _classCallCheck from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\n\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n\n\nvar Directionality = /*#__PURE__*/function () {\n  function Directionality(_document) {\n    _classCallCheck(this, Directionality);\n\n    /** The current 'ltr' or 'rtl' value. */\n    this.value = 'ltr';\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n\n    this.change = new EventEmitter();\n\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      var bodyDir = _document.body ? _document.body.dir : null;\n      var htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      var value = bodyDir || htmlDir;\n      this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';\n    }\n  }\n\n  _createClass(Directionality, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.change.complete();\n    }\n  }]);\n\n  return Directionality;\n}();\n\nDirectionality.ɵfac = function Directionality_Factory(t) {\n  return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8));\n};\n\nDirectionality.ɵprov = ɵɵdefineInjectable({\n  factory: function Directionality_Factory() {\n    return new Directionality(ɵɵinject(DIR_DOCUMENT, 8));\n  },\n  token: Directionality,\n  providedIn: \"root\"\n});\n\nDirectionality.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DIR_DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Directionality, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DIR_DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n\n\nvar Dir = /*#__PURE__*/function () {\n  function Dir() {\n    _classCallCheck(this, Dir);\n\n    /** Normalized direction that accounts for invalid/unsupported values. */\n    this._dir = 'ltr';\n    /** Whether the `value` has been set to its initial value. */\n\n    this._isInitialized = false;\n    /** Event emitted when the direction changes. */\n\n    this.change = new EventEmitter();\n  }\n  /** @docs-private */\n\n\n  _createClass(Dir, [{\n    key: \"dir\",\n    get: function get() {\n      return this._dir;\n    },\n    set: function set(value) {\n      var old = this._dir;\n      var normalizedValue = value ? value.toLowerCase() : value;\n      this._rawDir = value;\n      this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';\n\n      if (old !== this._dir && this._isInitialized) {\n        this.change.emit(this._dir);\n      }\n    }\n    /** Current layout direction of the element. */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.dir;\n    }\n    /** Initialize once default value has been set. */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._isInitialized = true;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.change.complete();\n    }\n  }]);\n\n  return Dir;\n}();\n\nDir.ɵfac = function Dir_Factory(t) {\n  return new (t || Dir)();\n};\n\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: Dir,\n  selectors: [[\"\", \"dir\", \"\"]],\n  hostVars: 1,\n  hostBindings: function Dir_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    }\n  },\n  inputs: {\n    dir: \"dir\"\n  },\n  outputs: {\n    change: \"dirChange\"\n  },\n  exportAs: [\"dir\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Directionality,\n    useExisting: Dir\n  }])]\n});\nDir.propDecorators = {\n  change: [{\n    type: Output,\n    args: ['dirChange']\n  }],\n  dir: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Dir, [{\n    type: Directive,\n    args: [{\n      selector: '[dir]',\n      providers: [{\n        provide: Directionality,\n        useExisting: Dir\n      }],\n      host: {\n        '[attr.dir]': '_rawDir'\n      },\n      exportAs: 'dir'\n    }]\n  }], function () {\n    return [];\n  }, {\n    change: [{\n      type: Output,\n      args: ['dirChange']\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar BidiModule = function BidiModule() {\n  _classCallCheck(this, BidiModule);\n};\n\nBidiModule.ɵfac = function BidiModule_Factory(t) {\n  return new (t || BidiModule)();\n};\n\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BidiModule\n});\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, {\n    declarations: [Dir],\n    exports: [Dir]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n    type: NgModule,\n    args: [{\n      exports: [Dir],\n      declarations: [Dir]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a }; //# sourceMappingURL=bidi.js.map","map":{"version":3,"sources":["/Users/mohammedelmourabit/xrp/xpr/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js"],"names":["InjectionToken","inject","EventEmitter","ɵɵdefineInjectable","ɵɵinject","Injectable","Optional","Inject","Directive","Output","Input","NgModule","DOCUMENT","ɵngcc0","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","complete","ɵfac","Directionality_Factory","t","ɵprov","token","ctorParameters","type","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","Dir_Factory","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","propDecorators","selector","providers","host","BidiModule","BidiModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ɵangular_material_src_cdk_bidi_bidi_a"],"mappings":"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","sourcesContent":["import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() { return this._dir; }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() { return this.dir; }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = function BidiModule_Factory(t) { return new (t || BidiModule)(); };\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map"]},"metadata":{},"sourceType":"module"}
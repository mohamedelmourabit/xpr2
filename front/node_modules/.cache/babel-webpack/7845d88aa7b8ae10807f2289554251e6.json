{"ast":null,"code":"import _toConsumableArray from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\nvar _c0 = [\"underline\"];\nvar _c1 = [\"connectionContainer\"];\nvar _c2 = [\"inputContainer\"];\nvar _c3 = [\"label\"];\n\nfunction MatFormField_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction MatFormField_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n  }\n}\n\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\n\nfunction MatFormField_label_9_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_label_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.updateOutlineGap();\n    });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n  }\n}\n\nfunction MatFormField_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n  }\n}\n\nfunction MatFormField_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n  }\n}\n\nfunction MatFormField_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n  }\n}\n\nfunction MatFormField_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n  }\n}\n\nvar _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nvar _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nvar nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nvar MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\n\nvar MatError = function MatError() {\n  _classCallCheck(this, MatError);\n\n  this.id = \"mat-error-\".concat(nextUniqueId++);\n};\n\nMatError.ɵfac = function MatError_Factory(t) {\n  return new (t || MatError)();\n};\n\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatError,\n  selectors: [[\"mat-error\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"],\n  hostVars: 1,\n  hostBindings: function MatError_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_ERROR,\n    useExisting: MatError\n  }])]\n});\nMatError.propDecorators = {\n  id: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-error',\n      host: {\n        'class': 'mat-error',\n        'role': 'alert',\n        '[attr.id]': 'id'\n      },\n      providers: [{\n        provide: MAT_ERROR,\n        useExisting: MatError\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\n\n\nvar matFormFieldAnimations = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [// TODO(mmalerba): Use angular animations for label animation as well.\n  state('enter', style({\n    opacity: 1,\n    transform: 'translateY(0%)'\n  })), transition('void => enter', [style({\n    opacity: 0,\n    transform: 'translateY(-5px)'\n  }), animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\n\nvar MatFormFieldControl = function MatFormFieldControl() {\n  _classCallCheck(this, MatFormFieldControl);\n};\n\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) {\n  return new (t || MatFormFieldControl)();\n};\n\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatFormFieldControl\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\n\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\n\n\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(\"A hint was already declared for 'align=\\\"\".concat(align, \"\\\"'.\"));\n}\n/** @docs-private */\n\n\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\n\nvar _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\n\n\nvar MatHint = function MatHint() {\n  _classCallCheck(this, MatHint);\n\n  /** Whether to align the hint label at the start or end of the line. */\n  this.align = 'start';\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n\n  this.id = \"mat-hint-\".concat(nextUniqueId$1++);\n};\n\nMatHint.ɵfac = function MatHint_Factory(t) {\n  return new (t || MatHint)();\n};\n\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatHint,\n  selectors: [[\"mat-hint\"]],\n  hostAttrs: [1, \"mat-hint\"],\n  hostVars: 4,\n  hostBindings: function MatHint_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n      ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    }\n  },\n  inputs: {\n    align: \"align\",\n    id: \"id\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: _MAT_HINT,\n    useExisting: MatHint\n  }])]\n});\nMatHint.propDecorators = {\n  align: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-hint',\n      host: {\n        'class': 'mat-hint',\n        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n        '[attr.id]': 'id',\n        // Remove align attribute to prevent it from interfering with layout.\n        '[attr.align]': 'null'\n      },\n      providers: [{\n        provide: _MAT_HINT,\n        useExisting: MatHint\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    align: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The floating label for a `mat-form-field`. */\n\n\nvar MatLabel = function MatLabel() {\n  _classCallCheck(this, MatLabel);\n};\n\nMatLabel.ɵfac = function MatLabel_Factory(t) {\n  return new (t || MatLabel)();\n};\n\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatLabel,\n  selectors: [[\"mat-label\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-label'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\n\n\nvar MatPlaceholder = function MatPlaceholder() {\n  _classCallCheck(this, MatPlaceholder);\n};\n\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) {\n  return new (t || MatPlaceholder)();\n};\n\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatPlaceholder,\n  selectors: [[\"mat-placeholder\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-placeholder'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nvar MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\n\nvar MatPrefix = function MatPrefix() {\n  _classCallCheck(this, MatPrefix);\n};\n\nMatPrefix.ɵfac = function MatPrefix_Factory(t) {\n  return new (t || MatPrefix)();\n};\n\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatPrefix,\n  selectors: [[\"\", \"matPrefix\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_PREFIX,\n    useExisting: MatPrefix\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n    type: Directive,\n    args: [{\n      selector: '[matPrefix]',\n      providers: [{\n        provide: MAT_PREFIX,\n        useExisting: MatPrefix\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nvar MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\n\nvar MatSuffix = function MatSuffix() {\n  _classCallCheck(this, MatSuffix);\n};\n\nMatSuffix.ɵfac = function MatSuffix_Factory(t) {\n  return new (t || MatSuffix)();\n};\n\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatSuffix,\n  selectors: [[\"\", \"matSuffix\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_SUFFIX,\n    useExisting: MatSuffix\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n    type: Directive,\n    args: [{\n      selector: '[matSuffix]',\n      providers: [{\n        provide: MAT_SUFFIX,\n        useExisting: MatSuffix\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar nextUniqueId$2 = 0;\nvar floatingLabelScale = 0.75;\nvar outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\n\nvar MatFormFieldBase = function MatFormFieldBase(_elementRef) {\n  _classCallCheck(this, MatFormFieldBase);\n\n  this._elementRef = _elementRef;\n};\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\n\n\nvar _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\n\n\nvar MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\n\nvar MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\n\nvar MatFormField = /*#__PURE__*/function (_MatFormFieldMixinBas) {\n  _inherits(MatFormField, _MatFormFieldMixinBas);\n\n  var _super = _createSuper(MatFormField);\n\n  function MatFormField(_elementRef, _changeDetectorRef,\n  /**\n   * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n   * @breaking-change 12.0.0\n   */\n  // Use `ElementRef` here so Angular has something to inject.\n  _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n    var _this;\n\n    _classCallCheck(this, MatFormField);\n\n    _this = _super.call(this, _elementRef);\n    _this._elementRef = _elementRef;\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._dir = _dir;\n    _this._defaults = _defaults;\n    _this._platform = _platform;\n    _this._ngZone = _ngZone;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     */\n\n    _this._outlineGapCalculationNeededImmediately = false;\n    /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n\n    _this._outlineGapCalculationNeededOnStable = false;\n    _this._destroyed = new Subject();\n    /** Override for the logic that disables the label animation in certain cases. */\n\n    _this._showAlwaysAnimate = false;\n    /** State of the mat-hint and mat-error animations. */\n\n    _this._subscriptAnimationState = '';\n    _this._hintLabel = ''; // Unique id for the hint label.\n\n    _this._hintLabelId = \"mat-hint-\".concat(nextUniqueId$2++); // Unique id for the label element.\n\n    _this._labelId = \"mat-form-field-label-\".concat(nextUniqueId$2++);\n    _this.floatLabel = _this._getDefaultFloatLabelState();\n    _this._animationsEnabled = _animationMode !== 'NoopAnimations'; // Set the default through here so we invoke the setter on the first run.\n\n    _this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n    _this._hideRequiredMarker = _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n    return _this;\n  }\n  /** The form-field appearance style. */\n\n\n  _createClass(MatFormField, [{\n    key: \"appearance\",\n    get: function get() {\n      return this._appearance;\n    },\n    set: function set(value) {\n      var oldValue = this._appearance;\n      this._appearance = value || this._defaults && this._defaults.appearance || 'legacy';\n\n      if (this._appearance === 'outline' && oldValue !== value) {\n        this._outlineGapCalculationNeededOnStable = true;\n      }\n    }\n    /** Whether the required marker should be hidden. */\n\n  }, {\n    key: \"hideRequiredMarker\",\n    get: function get() {\n      return this._hideRequiredMarker;\n    },\n    set: function set(value) {\n      this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n\n  }, {\n    key: \"_shouldAlwaysFloat\",\n    value: function _shouldAlwaysFloat() {\n      return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n\n  }, {\n    key: \"_canLabelFloat\",\n    value: function _canLabelFloat() {\n      return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n\n  }, {\n    key: \"hintLabel\",\n    get: function get() {\n      return this._hintLabel;\n    },\n    set: function set(value) {\n      this._hintLabel = value;\n\n      this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n\n  }, {\n    key: \"floatLabel\",\n    get: function get() {\n      return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    },\n    set: function set(value) {\n      if (value !== this._floatLabel) {\n        this._floatLabel = value || this._getDefaultFloatLabelState();\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }, {\n    key: \"_control\",\n    get: function get() {\n      // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n      //  We should clean this up once Ivy is the default renderer.\n      return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    },\n    set: function set(value) {\n      this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n\n  }, {\n    key: \"getLabelId\",\n    value: function getLabelId() {\n      return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n\n  }, {\n    key: \"getConnectedOverlayOrigin\",\n    value: function getConnectedOverlayOrigin() {\n      return this._connectionContainerRef || this._elementRef;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this._validateControlChild();\n\n      var control = this._control;\n\n      if (control.controlType) {\n        this._elementRef.nativeElement.classList.add(\"mat-form-field-type-\".concat(control.controlType));\n      } // Subscribe to changes in the child control state in order to update the form field UI.\n\n\n      control.stateChanges.pipe(startWith(null)).subscribe(function () {\n        _this2._validatePlaceholders();\n\n        _this2._syncDescribedByIds();\n\n        _this2._changeDetectorRef.markForCheck();\n      }); // Run change detection if the value changes.\n\n      if (control.ngControl && control.ngControl.valueChanges) {\n        control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(function () {\n          return _this2._changeDetectorRef.markForCheck();\n        });\n      } // Note that we have to run outside of the `NgZone` explicitly,\n      // in order to avoid throwing users into an infinite loop\n      // if `zone-patch-rxjs` is included.\n\n\n      this._ngZone.runOutsideAngular(function () {\n        _this2._ngZone.onStable.pipe(takeUntil(_this2._destroyed)).subscribe(function () {\n          if (_this2._outlineGapCalculationNeededOnStable) {\n            _this2.updateOutlineGap();\n          }\n        });\n      }); // Run change detection and update the outline if the suffix or prefix changes.\n\n\n      merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(function () {\n        _this2._outlineGapCalculationNeededOnStable = true;\n\n        _this2._changeDetectorRef.markForCheck();\n      }); // Re-validate when the number of hints changes.\n\n      this._hintChildren.changes.pipe(startWith(null)).subscribe(function () {\n        _this2._processHints();\n\n        _this2._changeDetectorRef.markForCheck();\n      }); // Update the aria-described by when the number of errors changes.\n\n\n      this._errorChildren.changes.pipe(startWith(null)).subscribe(function () {\n        _this2._syncDescribedByIds();\n\n        _this2._changeDetectorRef.markForCheck();\n      });\n\n      if (this._dir) {\n        this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(function () {\n          if (typeof requestAnimationFrame === 'function') {\n            _this2._ngZone.runOutsideAngular(function () {\n              requestAnimationFrame(function () {\n                return _this2.updateOutlineGap();\n              });\n            });\n          } else {\n            _this2.updateOutlineGap();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      this._validateControlChild();\n\n      if (this._outlineGapCalculationNeededImmediately) {\n        this.updateOutlineGap();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      // Avoid animations on load.\n      this._subscriptAnimationState = 'enter';\n\n      this._changeDetectorRef.detectChanges();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n\n  }, {\n    key: \"_shouldForward\",\n    value: function _shouldForward(prop) {\n      var ngControl = this._control ? this._control.ngControl : null;\n      return ngControl && ngControl[prop];\n    }\n  }, {\n    key: \"_hasPlaceholder\",\n    value: function _hasPlaceholder() {\n      return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n  }, {\n    key: \"_hasLabel\",\n    value: function _hasLabel() {\n      return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n  }, {\n    key: \"_shouldLabelFloat\",\n    value: function _shouldLabelFloat() {\n      return this._canLabelFloat() && (this._control && this._control.shouldLabelFloat || this._shouldAlwaysFloat());\n    }\n  }, {\n    key: \"_hideControlPlaceholder\",\n    value: function _hideControlPlaceholder() {\n      // In the legacy appearance the placeholder is promoted to a label if no label is given.\n      return this.appearance === 'legacy' && !this._hasLabel() || this._hasLabel() && !this._shouldLabelFloat();\n    }\n  }, {\n    key: \"_hasFloatingLabel\",\n    value: function _hasFloatingLabel() {\n      // In the legacy appearance the placeholder is promoted to a label if no label is given.\n      return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n\n  }, {\n    key: \"_getDisplayedMessages\",\n    value: function _getDisplayedMessages() {\n      return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n\n  }, {\n    key: \"_animateAndLockLabel\",\n    value: function _animateAndLockLabel() {\n      var _this3 = this;\n\n      if (this._hasFloatingLabel() && this._canLabelFloat()) {\n        // If animations are disabled, we shouldn't go in here,\n        // because the `transitionend` will never fire.\n        if (this._animationsEnabled && this._label) {\n          this._showAlwaysAnimate = true;\n          fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(function () {\n            _this3._showAlwaysAnimate = false;\n          });\n        }\n\n        this.floatLabel = 'always';\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n\n  }, {\n    key: \"_validatePlaceholders\",\n    value: function _validatePlaceholders() {\n      if (this._control.placeholder && this._placeholderChild && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatFormFieldPlaceholderConflictError();\n      }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n\n  }, {\n    key: \"_processHints\",\n    value: function _processHints() {\n      this._validateHints();\n\n      this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n\n  }, {\n    key: \"_validateHints\",\n    value: function _validateHints() {\n      var _this4 = this;\n\n      if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        var startHint;\n        var endHint;\n\n        this._hintChildren.forEach(function (hint) {\n          if (hint.align === 'start') {\n            if (startHint || _this4.hintLabel) {\n              throw getMatFormFieldDuplicatedHintError('start');\n            }\n\n            startHint = hint;\n          } else if (hint.align === 'end') {\n            if (endHint) {\n              throw getMatFormFieldDuplicatedHintError('end');\n            }\n\n            endHint = hint;\n          }\n        });\n      }\n    }\n    /** Gets the default float label state. */\n\n  }, {\n    key: \"_getDefaultFloatLabelState\",\n    value: function _getDefaultFloatLabelState() {\n      return this._defaults && this._defaults.floatLabel || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n\n  }, {\n    key: \"_syncDescribedByIds\",\n    value: function _syncDescribedByIds() {\n      if (this._control) {\n        var ids = []; // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n\n        if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n          ids.push.apply(ids, _toConsumableArray(this._control.userAriaDescribedBy.split(' ')));\n        }\n\n        if (this._getDisplayedMessages() === 'hint') {\n          var startHint = this._hintChildren ? this._hintChildren.find(function (hint) {\n            return hint.align === 'start';\n          }) : null;\n          var endHint = this._hintChildren ? this._hintChildren.find(function (hint) {\n            return hint.align === 'end';\n          }) : null;\n\n          if (startHint) {\n            ids.push(startHint.id);\n          } else if (this._hintLabel) {\n            ids.push(this._hintLabelId);\n          }\n\n          if (endHint) {\n            ids.push(endHint.id);\n          }\n        } else if (this._errorChildren) {\n          ids.push.apply(ids, _toConsumableArray(this._errorChildren.map(function (error) {\n            return error.id;\n          })));\n        }\n\n        this._control.setDescribedByIds(ids);\n      }\n    }\n    /** Throws an error if the form field's control is missing. */\n\n  }, {\n    key: \"_validateControlChild\",\n    value: function _validateControlChild() {\n      if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatFormFieldMissingControlError();\n      }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n\n  }, {\n    key: \"updateOutlineGap\",\n    value: function updateOutlineGap() {\n      var labelEl = this._label ? this._label.nativeElement : null;\n\n      if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n        return;\n      }\n\n      if (!this._platform.isBrowser) {\n        // getBoundingClientRect isn't available on the server.\n        return;\n      } // If the element is not present in the DOM, the outline gap will need to be calculated\n      // the next time it is checked and in the DOM.\n\n\n      if (!this._isAttachedToDOM()) {\n        this._outlineGapCalculationNeededImmediately = true;\n        return;\n      }\n\n      var startWidth = 0;\n      var gapWidth = 0;\n      var container = this._connectionContainerRef.nativeElement;\n      var startEls = container.querySelectorAll('.mat-form-field-outline-start');\n      var gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n\n      if (this._label && this._label.nativeElement.children.length) {\n        var containerRect = container.getBoundingClientRect(); // If the container's width and height are zero, it means that the element is\n        // invisible and we can't calculate the outline gap. Mark the element as needing\n        // to be checked the next time the zone stabilizes. We can't do this immediately\n        // on the next change detection, because even if the element becomes visible,\n        // the `ClientRect` won't be reclaculated immediately. We reset the\n        // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n\n        if (containerRect.width === 0 && containerRect.height === 0) {\n          this._outlineGapCalculationNeededOnStable = true;\n          this._outlineGapCalculationNeededImmediately = false;\n          return;\n        }\n\n        var containerStart = this._getStartEnd(containerRect);\n\n        var labelChildren = labelEl.children;\n\n        var labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n\n        var labelWidth = 0;\n\n        for (var i = 0; i < labelChildren.length; i++) {\n          labelWidth += labelChildren[i].offsetWidth;\n        }\n\n        startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n        gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n      }\n\n      for (var _i = 0; _i < startEls.length; _i++) {\n        startEls[_i].style.width = \"\".concat(startWidth, \"px\");\n      }\n\n      for (var _i2 = 0; _i2 < gapEls.length; _i2++) {\n        gapEls[_i2].style.width = \"\".concat(gapWidth, \"px\");\n      }\n\n      this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n\n  }, {\n    key: \"_getStartEnd\",\n    value: function _getStartEnd(rect) {\n      return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n\n  }, {\n    key: \"_isAttachedToDOM\",\n    value: function _isAttachedToDOM() {\n      var element = this._elementRef.nativeElement;\n\n      if (element.getRootNode) {\n        var rootNode = element.getRootNode(); // If the element is inside the DOM the root node will be either the document\n        // or the closest shadow root, otherwise it'll be the element itself.\n\n        return rootNode && rootNode !== element;\n      } // Otherwise fall back to checking if it's in the document. This doesn't account for\n      // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n\n\n      return document.documentElement.contains(element);\n    }\n  }]);\n\n  return MatFormField;\n}(_MatFormFieldMixinBase);\n\nMatFormField.ɵfac = function MatFormField_Factory(t) {\n  return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatFormField,\n  selectors: [[\"mat-form-field\"]],\n  contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 3);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 3);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    }\n  },\n  viewQuery: function MatFormField_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n      ɵngcc0.ɵɵviewQuery(_c1, 3);\n      ɵngcc0.ɵɵviewQuery(_c2, 1);\n      ɵngcc0.ɵɵviewQuery(_c3, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-form-field\"],\n  hostVars: 44,\n  hostBindings: function MatFormField_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    floatLabel: \"floatLabel\",\n    appearance: \"appearance\",\n    hideRequiredMarker: \"hideRequiredMarker\",\n    hintLabel: \"hintLabel\"\n  },\n  exportAs: [\"matFormField\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_FORM_FIELD,\n    useExisting: MatFormField\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c5,\n  decls: 15,\n  vars: 8,\n  consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]],\n  template: function MatFormField_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c4);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) {\n        return ctx._control.onContainerClick && ctx._control.onContainerClick($event);\n      });\n      ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n      ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n      ɵngcc0.ɵɵprojection(7);\n      ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n      ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n      ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n      ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n      ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent],\n  styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matFormFieldAnimations.transitionMessages]\n  },\n  changeDetection: 0\n});\n\nMatFormField.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [ElementRef]\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: Platform\n  }, {\n    type: NgZone\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatFormField.propDecorators = {\n  appearance: [{\n    type: Input\n  }],\n  hideRequiredMarker: [{\n    type: Input\n  }],\n  hintLabel: [{\n    type: Input\n  }],\n  floatLabel: [{\n    type: Input\n  }],\n  underlineRef: [{\n    type: ViewChild,\n    args: ['underline']\n  }],\n  _connectionContainerRef: [{\n    type: ViewChild,\n    args: ['connectionContainer', {\n      static: true\n    }]\n  }],\n  _inputContainerRef: [{\n    type: ViewChild,\n    args: ['inputContainer']\n  }],\n  _label: [{\n    type: ViewChild,\n    args: ['label']\n  }],\n  _controlNonStatic: [{\n    type: ContentChild,\n    args: [MatFormFieldControl]\n  }],\n  _controlStatic: [{\n    type: ContentChild,\n    args: [MatFormFieldControl, {\n      static: true\n    }]\n  }],\n  _labelChildNonStatic: [{\n    type: ContentChild,\n    args: [MatLabel]\n  }],\n  _labelChildStatic: [{\n    type: ContentChild,\n    args: [MatLabel, {\n      static: true\n    }]\n  }],\n  _placeholderChild: [{\n    type: ContentChild,\n    args: [MatPlaceholder]\n  }],\n  _errorChildren: [{\n    type: ContentChildren,\n    args: [MAT_ERROR, {\n      descendants: true\n    }]\n  }],\n  _hintChildren: [{\n    type: ContentChildren,\n    args: [_MAT_HINT, {\n      descendants: true\n    }]\n  }],\n  _prefixChildren: [{\n    type: ContentChildren,\n    args: [MAT_PREFIX, {\n      descendants: true\n    }]\n  }],\n  _suffixChildren: [{\n    type: ContentChildren,\n    args: [MAT_SUFFIX, {\n      descendants: true\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n    type: Component,\n    args: [{\n      selector: 'mat-form-field',\n      exportAs: 'matFormField',\n      template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n      animations: [matFormFieldAnimations.transitionMessages],\n      host: {\n        'class': 'mat-form-field',\n        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n        '[class.mat-form-field-invalid]': '_control.errorState',\n        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n        '[class.mat-form-field-disabled]': '_control.disabled',\n        '[class.mat-form-field-autofilled]': '_control.autofilled',\n        '[class.mat-focused]': '_control.focused',\n        '[class.mat-accent]': 'color == \"accent\"',\n        '[class.mat-warn]': 'color == \"warn\"',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '[class._mat-animation-noopable]': '!_animationsEnabled'\n      },\n      inputs: ['color'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_FORM_FIELD,\n        useExisting: MatFormField\n      }],\n      styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    floatLabel: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    hideRequiredMarker: [{\n      type: Input\n    }],\n    hintLabel: [{\n      type: Input\n    }],\n    underlineRef: [{\n      type: ViewChild,\n      args: ['underline']\n    }],\n    _connectionContainerRef: [{\n      type: ViewChild,\n      args: ['connectionContainer', {\n        static: true\n      }]\n    }],\n    _inputContainerRef: [{\n      type: ViewChild,\n      args: ['inputContainer']\n    }],\n    _label: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    _controlNonStatic: [{\n      type: ContentChild,\n      args: [MatFormFieldControl]\n    }],\n    _controlStatic: [{\n      type: ContentChild,\n      args: [MatFormFieldControl, {\n        static: true\n      }]\n    }],\n    _labelChildNonStatic: [{\n      type: ContentChild,\n      args: [MatLabel]\n    }],\n    _labelChildStatic: [{\n      type: ContentChild,\n      args: [MatLabel, {\n        static: true\n      }]\n    }],\n    _placeholderChild: [{\n      type: ContentChild,\n      args: [MatPlaceholder]\n    }],\n    _errorChildren: [{\n      type: ContentChildren,\n      args: [MAT_ERROR, {\n        descendants: true\n      }]\n    }],\n    _hintChildren: [{\n      type: ContentChildren,\n      args: [_MAT_HINT, {\n        descendants: true\n      }]\n    }],\n    _prefixChildren: [{\n      type: ContentChildren,\n      args: [MAT_PREFIX, {\n        descendants: true\n      }]\n    }],\n    _suffixChildren: [{\n      type: ContentChildren,\n      args: [MAT_SUFFIX, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatFormFieldModule = function MatFormFieldModule() {\n  _classCallCheck(this, MatFormFieldModule);\n};\n\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) {\n  return new (t || MatFormFieldModule)();\n};\n\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatFormFieldModule\n});\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule, ObserversModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, {\n    declarations: function declarations() {\n      return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, ObserversModule];\n    },\n    exports: function exports() {\n      return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n      imports: [CommonModule, MatCommonModule, ObserversModule],\n      exports: [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations }; //# sourceMappingURL=form-field.js.map","map":{"version":3,"sources":["/Users/mohammedelmourabit/xrp/xpr/node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js"],"names":["ObserversModule","CommonModule","InjectionToken","Directive","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","ChangeDetectorRef","Inject","Optional","NgZone","ViewChild","ContentChild","ContentChildren","NgModule","mixinColor","MatCommonModule","Directionality","coerceBooleanProperty","Subject","merge","fromEvent","startWith","takeUntil","take","trigger","state","style","transition","animate","Platform","ANIMATION_MODULE_TYPE","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","_c1","_c2","_c3","MatFormField_ng_container_3_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","MatFormField_div_4_Template","ɵɵprojection","MatFormField_label_9_ng_container_2_Template","ɵɵtext","ctx_r10","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","_control","placeholder","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","ɵɵgetCurrentView","ɵɵlistener","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ɵɵrestoreView","ctx_r13","updateOutlineGap","ɵɵtemplate","ctx_r4","ɵɵclassProp","empty","_shouldAlwaysFloat","color","ɵɵproperty","appearance","_labelId","_hasLabel","ɵɵattribute","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","nextUniqueId","MAT_ERROR","MatError","ɵfac","MatError_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatError_HostBindings","inputs","features","ɵɵProvidersFeature","provide","useExisting","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","host","providers","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MAT_PREFIX","MatPrefix","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_elementRef","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","_labelOptions","_dir","_defaults","_platform","_ngZone","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_destroyed","_showAlwaysAnimate","_hintLabel","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_appearance","value","oldValue","_processHints","_floatLabel","markForCheck","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_hasFloatingLabel","_connectionContainerRef","_validateControlChild","control","controlType","nativeElement","classList","add","stateChanges","pipe","subscribe","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","runOutsideAngular","onStable","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","change","requestAnimationFrame","detectChanges","next","complete","prop","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_label","_validateHints","startHint","endHint","forEach","hint","ids","userAriaDescribedBy","push","split","_getDisplayedMessages","find","map","error","setDescribedByIds","labelEl","children","textContent","trim","isBrowser","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","height","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","i","offsetWidth","Math","abs","rect","right","left","element","getRootNode","rootNode","document","documentElement","contains","MatFormField_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","contentQueries","MatFormField_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatFormField_Query","ɵɵviewQuery","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","exportAs","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatFormField_Template","ɵɵprojectionDef","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","NgIf","NgSwitch","NgSwitchCase","CdkObserveContent","styles","encapsulation","data","animation","changeDetection","ctorParameters","undefined","decorators","String","static","descendants","animations","None","OnPush","MatFormFieldModule","MatFormFieldModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, \n    /**\n     * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n     * @breaking-change 12.0.0\n     */\n    // Use `ElementRef` here so Angular has something to inject.\n    _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 3);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 3);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 3);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map"]},"metadata":{},"sourceType":"module"}
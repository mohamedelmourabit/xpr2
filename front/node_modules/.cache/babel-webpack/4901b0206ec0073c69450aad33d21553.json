{"ast":null,"code":"import _createClass from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nvar _c0 = [\"sliderWrapper\"];\nvar activeEventOptions = normalizePassiveListenerOptions({\n  passive: false\n});\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\n\nvar MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\n\nvar DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\n\nvar MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\n\nvar MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\n\nvar MAT_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return MatSlider;\n  }),\n  multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\n\nvar MatSliderChange = function MatSliderChange() {\n  _classCallCheck(this, MatSliderChange);\n}; // Boilerplate for applying mixins to MatSlider.\n\n/** @docs-private */\n\n\nvar MatSliderBase = function MatSliderBase(_elementRef) {\n  _classCallCheck(this, MatSliderBase);\n\n  this._elementRef = _elementRef;\n};\n\nvar _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n\n\nvar MatSlider = /*#__PURE__*/function (_MatSliderMixinBase2) {\n  _inherits(MatSlider, _MatSliderMixinBase2);\n\n  var _super = _createSuper(MatSlider);\n\n  function MatSlider(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n    var _this;\n\n    _classCallCheck(this, MatSlider);\n\n    _this = _super.call(this, elementRef);\n    _this._focusMonitor = _focusMonitor;\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._dir = _dir;\n    _this._ngZone = _ngZone;\n    _this._animationMode = _animationMode;\n    _this._invert = false;\n    _this._max = 100;\n    _this._min = 0;\n    _this._step = 1;\n    _this._thumbLabel = false;\n    _this._tickInterval = 0;\n    _this._value = null;\n    _this._vertical = false;\n    /** Event emitted when the slider value has changed. */\n\n    _this.change = new EventEmitter();\n    /** Event emitted when the slider thumb moves. */\n\n    _this.input = new EventEmitter();\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n\n    _this.valueChange = new EventEmitter();\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n\n    _this.onTouched = function () {};\n\n    _this._percent = 0;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     */\n\n    _this._isSliding = false;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     */\n\n    _this._isActive = false;\n    /** The size of a tick interval as a percentage of the size of the track. */\n\n    _this._tickIntervalPercent = 0;\n    /** The dimensions of the slider. */\n\n    _this._sliderDimensions = null;\n\n    _this._controlValueAccessorChangeFn = function () {};\n    /** Subscription to the Directionality change EventEmitter. */\n\n\n    _this._dirChangeSubscription = Subscription.EMPTY;\n    /** Called when the user has put their pointer down on the slider. */\n\n    _this._pointerDown = function (event) {\n      // Don't do anything if the slider is disabled or the\n      // user is using anything other than the main mouse button.\n      if (_this.disabled || _this._isSliding || !isTouchEvent(event) && event.button !== 0) {\n        return;\n      }\n\n      _this._ngZone.run(function () {\n        var oldValue = _this.value;\n        var pointerPosition = getPointerPositionOnPage(event);\n        _this._isSliding = true;\n        _this._lastPointerEvent = event;\n        event.preventDefault();\n\n        _this._focusHostElement();\n\n        _this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n\n\n        _this._bindGlobalEvents(event);\n\n        _this._focusHostElement();\n\n        _this._updateValueFromPosition(pointerPosition);\n\n        _this._valueOnSlideStart = oldValue; // Emit a change and input event if the value changed.\n\n        if (oldValue != _this.value) {\n          _this._emitInputEvent();\n        }\n      });\n    };\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     */\n\n\n    _this._pointerMove = function (event) {\n      if (_this._isSliding) {\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        var oldValue = _this.value;\n        _this._lastPointerEvent = event;\n\n        _this._updateValueFromPosition(getPointerPositionOnPage(event)); // Native range elements always emit `input` events when the value changed while sliding.\n\n\n        if (oldValue != _this.value) {\n          _this._emitInputEvent();\n        }\n      }\n    };\n    /** Called when the user has lifted their pointer. Bound on the document level. */\n\n\n    _this._pointerUp = function (event) {\n      if (_this._isSliding) {\n        event.preventDefault();\n\n        _this._removeGlobalEvents();\n\n        _this._isSliding = false;\n\n        if (_this._valueOnSlideStart != _this.value && !_this.disabled) {\n          _this._emitChangeEvent();\n        }\n\n        _this._valueOnSlideStart = _this._lastPointerEvent = null;\n      }\n    };\n    /** Called when the window has lost focus. */\n\n\n    _this._windowBlur = function () {\n      // If the window is blurred while dragging we need to stop dragging because the\n      // browser won't dispatch the `mouseup` and `touchend` events anymore.\n      if (_this._lastPointerEvent) {\n        _this._pointerUp(_this._lastPointerEvent);\n      }\n    };\n\n    _this._document = _document;\n    _this.tabIndex = parseInt(tabIndex) || 0;\n\n    _ngZone.runOutsideAngular(function () {\n      var element = elementRef.nativeElement;\n      element.addEventListener('mousedown', _this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', _this._pointerDown, activeEventOptions);\n    });\n\n    return _this;\n  }\n  /** Whether the slider is inverted. */\n\n\n  _createClass(MatSlider, [{\n    key: \"invert\",\n    get: function get() {\n      return this._invert;\n    },\n    set: function set(value) {\n      this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    },\n    set: function set(v) {\n      this._max = coerceNumberProperty(v, this._max);\n      this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n\n  }, {\n    key: \"min\",\n    get: function get() {\n      return this._min;\n    },\n    set: function set(v) {\n      this._min = coerceNumberProperty(v, this._min); // If the value wasn't explicitly set by the user, set it to the min.\n\n      if (this._value === null) {\n        this.value = this._min;\n      }\n\n      this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n\n  }, {\n    key: \"step\",\n    get: function get() {\n      return this._step;\n    },\n    set: function set(v) {\n      this._step = coerceNumberProperty(v, this._step);\n\n      if (this._step % 1 !== 0) {\n        this._roundToDecimal = this._step.toString().split('.').pop().length;\n      } // Since this could modify the label, we need to notify the change detection.\n\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n\n  }, {\n    key: \"thumbLabel\",\n    get: function get() {\n      return this._thumbLabel;\n    },\n    set: function set(value) {\n      this._thumbLabel = coerceBooleanProperty(value);\n    }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n\n  }, {\n    key: \"tickInterval\",\n    get: function get() {\n      return this._tickInterval;\n    },\n    set: function set(value) {\n      if (value === 'auto') {\n        this._tickInterval = 'auto';\n      } else if (typeof value === 'number' || typeof value === 'string') {\n        this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n      } else {\n        this._tickInterval = 0;\n      }\n    }\n    /** Value of the slider. */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      // If the value needs to be read and it is still uninitialized, initialize it to the min.\n      if (this._value === null) {\n        this.value = this._min;\n      }\n\n      return this._value;\n    },\n    set: function set(v) {\n      if (v !== this._value) {\n        var value = coerceNumberProperty(v); // While incrementing by a decimal we can end up with values like 33.300000000000004.\n        // Truncate it to ensure that it matches the label and to make it easier to work with.\n\n        if (this._roundToDecimal && value !== this.min && value !== this.max) {\n          value = parseFloat(value.toFixed(this._roundToDecimal));\n        }\n\n        this._value = value;\n        this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Whether the slider is vertical. */\n\n  }, {\n    key: \"vertical\",\n    get: function get() {\n      return this._vertical;\n    },\n    set: function set(value) {\n      this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n\n  }, {\n    key: \"displayValue\",\n    get: function get() {\n      if (this.displayWith) {\n        // Value is never null but since setters and getters cannot have\n        // different types, the value getter is also typed to return null.\n        return this.displayWith(this.value);\n      } // Note that this could be improved further by rounding something like 0.999 to 1 or\n      // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n      // every change detection cycle.\n\n\n      if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n        return this.value.toFixed(this._roundToDecimal);\n      }\n\n      return this.value || 0;\n    }\n    /** set focus to the host element */\n\n  }, {\n    key: \"focus\",\n    value: function focus(options) {\n      this._focusHostElement(options);\n    }\n    /** blur the host element */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n\n  }, {\n    key: \"percent\",\n    get: function get() {\n      return this._clamp(this._percent);\n    }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n\n  }, {\n    key: \"_shouldInvertAxis\",\n    value: function _shouldInvertAxis() {\n      // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n      // top. However from a y-axis standpoint this is inverted.\n      return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n\n  }, {\n    key: \"_isMinValue\",\n    value: function _isMinValue() {\n      return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n\n  }, {\n    key: \"_getThumbGap\",\n    value: function _getThumbGap() {\n      if (this.disabled) {\n        return DISABLED_THUMB_GAP;\n      }\n\n      if (this._isMinValue() && !this.thumbLabel) {\n        return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n      }\n\n      return 0;\n    }\n    /** CSS styles for the track background element. */\n\n  }, {\n    key: \"_getTrackBackgroundStyles\",\n    value: function _getTrackBackgroundStyles() {\n      var axis = this.vertical ? 'Y' : 'X';\n      var scale = this.vertical ? \"1, \".concat(1 - this.percent, \", 1\") : \"\".concat(1 - this.percent, \", 1, 1\");\n      var sign = this._shouldInvertMouseCoords() ? '-' : '';\n      return {\n        // scale3d avoids some rendering issues in Chrome. See #12071.\n        transform: \"translate\".concat(axis, \"(\").concat(sign).concat(this._getThumbGap(), \"px) scale3d(\").concat(scale, \")\")\n      };\n    }\n    /** CSS styles for the track fill element. */\n\n  }, {\n    key: \"_getTrackFillStyles\",\n    value: function _getTrackFillStyles() {\n      var percent = this.percent;\n      var axis = this.vertical ? 'Y' : 'X';\n      var scale = this.vertical ? \"1, \".concat(percent, \", 1\") : \"\".concat(percent, \", 1, 1\");\n      var sign = this._shouldInvertMouseCoords() ? '' : '-';\n      return {\n        // scale3d avoids some rendering issues in Chrome. See #12071.\n        transform: \"translate\".concat(axis, \"(\").concat(sign).concat(this._getThumbGap(), \"px) scale3d(\").concat(scale, \")\"),\n        // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n        // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n        // the value of the slider is 0, we can easily get into this situation. We force a\n        // recalculation by changing the element's `display` when it goes from 0 to any other value.\n        display: percent === 0 ? 'none' : ''\n      };\n    }\n    /** CSS styles for the ticks container element. */\n\n  }, {\n    key: \"_getTicksContainerStyles\",\n    value: function _getTicksContainerStyles() {\n      var axis = this.vertical ? 'Y' : 'X'; // For a horizontal slider in RTL languages we push the ticks container off the left edge\n      // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n\n      var sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n      var offset = this._tickIntervalPercent / 2 * 100;\n      return {\n        'transform': \"translate\".concat(axis, \"(\").concat(sign).concat(offset, \"%)\")\n      };\n    }\n    /** CSS styles for the ticks element. */\n\n  }, {\n    key: \"_getTicksStyles\",\n    value: function _getTicksStyles() {\n      var tickSize = this._tickIntervalPercent * 100;\n      var backgroundSize = this.vertical ? \"2px \".concat(tickSize, \"%\") : \"\".concat(tickSize, \"% 2px\");\n      var axis = this.vertical ? 'Y' : 'X'; // Depending on the direction we pushed the ticks container, push the ticks the opposite\n      // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n      // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n\n      var sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n      var rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n      var styles = {\n        'backgroundSize': backgroundSize,\n        // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n        'transform': \"translateZ(0) translate\".concat(axis, \"(\").concat(sign).concat(tickSize / 2, \"%)\").concat(rotate)\n      };\n\n      if (this._isMinValue() && this._getThumbGap()) {\n        var shouldInvertAxis = this._shouldInvertAxis();\n\n        var side;\n\n        if (this.vertical) {\n          side = shouldInvertAxis ? 'Bottom' : 'Top';\n        } else {\n          side = shouldInvertAxis ? 'Right' : 'Left';\n        }\n\n        styles[\"padding\".concat(side)] = \"\".concat(this._getThumbGap(), \"px\");\n      }\n\n      return styles;\n    }\n  }, {\n    key: \"_getThumbContainerStyles\",\n    value: function _getThumbContainerStyles() {\n      var shouldInvertAxis = this._shouldInvertAxis();\n\n      var axis = this.vertical ? 'Y' : 'X'; // For a horizontal slider in RTL languages we push the thumb container off the left edge\n      // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n\n      var invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n      var offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n      return {\n        'transform': \"translate\".concat(axis, \"(-\").concat(offset, \"%)\")\n      };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n\n  }, {\n    key: \"_shouldInvertMouseCoords\",\n    value: function _shouldInvertMouseCoords() {\n      var shouldInvertAxis = this._shouldInvertAxis();\n\n      return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n\n  }, {\n    key: \"_getDirection\",\n    value: function _getDirection() {\n      return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(function (origin) {\n        _this2._isActive = !!origin && origin !== 'keyboard';\n\n        _this2._changeDetectorRef.detectChanges();\n      });\n\n      if (this._dir) {\n        this._dirChangeSubscription = this._dir.change.subscribe(function () {\n          _this2._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var element = this._elementRef.nativeElement;\n      element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n      this._lastPointerEvent = null;\n\n      this._removeGlobalEvents();\n\n      this._focusMonitor.stopMonitoring(this._elementRef);\n\n      this._dirChangeSubscription.unsubscribe();\n    }\n  }, {\n    key: \"_onMouseenter\",\n    value: function _onMouseenter() {\n      if (this.disabled) {\n        return;\n      } // We save the dimensions of the slider here so we can use them to update the spacing of the\n      // ticks and determine where on the slider click and slide events happen.\n\n\n      this._sliderDimensions = this._getSliderDimensions();\n\n      this._updateTickIntervalPercent();\n    }\n  }, {\n    key: \"_onFocus\",\n    value: function _onFocus() {\n      // We save the dimensions of the slider here so we can use them to update the spacing of the\n      // ticks and determine where on the slider click and slide events happen.\n      this._sliderDimensions = this._getSliderDimensions();\n\n      this._updateTickIntervalPercent();\n    }\n  }, {\n    key: \"_onBlur\",\n    value: function _onBlur() {\n      this.onTouched();\n    }\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      if (this.disabled || hasModifierKey(event)) {\n        return;\n      }\n\n      var oldValue = this.value;\n\n      switch (event.keyCode) {\n        case PAGE_UP:\n          this._increment(10);\n\n          break;\n\n        case PAGE_DOWN:\n          this._increment(-10);\n\n          break;\n\n        case END:\n          this.value = this.max;\n          break;\n\n        case HOME:\n          this.value = this.min;\n          break;\n\n        case LEFT_ARROW:\n          // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n          // inverted slider the thumb moves in that direction. However for a blind user, nothing\n          // about the slider indicates that it is inverted. They will expect left to be decrement,\n          // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n          // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n          // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n          // sighted users, therefore we do not swap the meaning.\n          this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n\n          break;\n\n        case UP_ARROW:\n          this._increment(1);\n\n          break;\n\n        case RIGHT_ARROW:\n          // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n          this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n\n          break;\n\n        case DOWN_ARROW:\n          this._increment(-1);\n\n          break;\n\n        default:\n          // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n          // it.\n          return;\n      }\n\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n\n        this._emitChangeEvent();\n      }\n\n      this._isSliding = true;\n      event.preventDefault();\n    }\n  }, {\n    key: \"_onKeyup\",\n    value: function _onKeyup() {\n      this._isSliding = false;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n\n  }, {\n    key: \"_getWindow\",\n    value: function _getWindow() {\n      return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n\n  }, {\n    key: \"_bindGlobalEvents\",\n    value: function _bindGlobalEvents(triggerEvent) {\n      // Note that we bind the events to the `document`, because it allows us to capture\n      // drag cancel events where the user's pointer is outside the browser window.\n      var document = this._document;\n      var isTouch = isTouchEvent(triggerEvent);\n      var moveEventName = isTouch ? 'touchmove' : 'mousemove';\n      var endEventName = isTouch ? 'touchend' : 'mouseup';\n      document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n      document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n      if (isTouch) {\n        document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n      }\n\n      var window = this._getWindow();\n\n      if (typeof window !== 'undefined' && window) {\n        window.addEventListener('blur', this._windowBlur);\n      }\n    }\n    /** Removes any global event listeners that we may have added. */\n\n  }, {\n    key: \"_removeGlobalEvents\",\n    value: function _removeGlobalEvents() {\n      var document = this._document;\n      document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n      document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n      document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n      document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n      document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n\n      var window = this._getWindow();\n\n      if (typeof window !== 'undefined' && window) {\n        window.removeEventListener('blur', this._windowBlur);\n      }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n\n  }, {\n    key: \"_increment\",\n    value: function _increment(numSteps) {\n      this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n\n  }, {\n    key: \"_updateValueFromPosition\",\n    value: function _updateValueFromPosition(pos) {\n      if (!this._sliderDimensions) {\n        return;\n      }\n\n      var offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n      var size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      var posComponent = this.vertical ? pos.y : pos.x; // The exact value is calculated from the event and used to find the closest snap value.\n\n      var percent = this._clamp((posComponent - offset) / size);\n\n      if (this._shouldInvertMouseCoords()) {\n        percent = 1 - percent;\n      } // Since the steps may not divide cleanly into the max value, if the user\n      // slid to 0 or 100 percent, we jump to the min/max value. This approach\n      // is slightly more intuitive than using `Math.ceil` below, because it\n      // follows the user's pointer closer.\n\n\n      if (percent === 0) {\n        this.value = this.min;\n      } else if (percent === 1) {\n        this.value = this.max;\n      } else {\n        var exactValue = this._calculateValue(percent); // This calculation finds the closest step by finding the closest\n        // whole number divisible by the step relative to the min.\n\n\n        var closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min; // The value needs to snap to the min and max.\n\n        this.value = this._clamp(closestValue, this.min, this.max);\n      }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n\n  }, {\n    key: \"_emitChangeEvent\",\n    value: function _emitChangeEvent() {\n      this._controlValueAccessorChangeFn(this.value);\n\n      this.valueChange.emit(this.value);\n      this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n\n  }, {\n    key: \"_emitInputEvent\",\n    value: function _emitInputEvent() {\n      this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n\n  }, {\n    key: \"_updateTickIntervalPercent\",\n    value: function _updateTickIntervalPercent() {\n      if (!this.tickInterval || !this._sliderDimensions) {\n        return;\n      }\n\n      if (this.tickInterval == 'auto') {\n        var trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        var pixelsPerStep = trackSize * this.step / (this.max - this.min);\n        var stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n        var pixelsPerTick = stepsPerTick * this.step;\n        this._tickIntervalPercent = pixelsPerTick / trackSize;\n      } else {\n        this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n      }\n    }\n    /** Creates a slider change object from the specified value. */\n\n  }, {\n    key: \"_createChangeEvent\",\n    value: function _createChangeEvent() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n      var event = new MatSliderChange();\n      event.source = this;\n      event.value = value;\n      return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n\n  }, {\n    key: \"_calculatePercentage\",\n    value: function _calculatePercentage(value) {\n      return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n\n  }, {\n    key: \"_calculateValue\",\n    value: function _calculateValue(percentage) {\n      return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n\n  }, {\n    key: \"_clamp\",\n    value: function _clamp(value) {\n      var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n\n  }, {\n    key: \"_getSliderDimensions\",\n    value: function _getSliderDimensions() {\n      return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n\n  }, {\n    key: \"_focusHostElement\",\n    value: function _focusHostElement(options) {\n      this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n\n  }, {\n    key: \"_blurHostElement\",\n    value: function _blurHostElement() {\n      this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }]);\n\n  return MatSlider;\n}(_MatSliderMixinBase);\n\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"],\n  hostVars: 29,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      })(\"blur\", function MatSlider_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"keyup\", function MatSlider_keyup_HostBindingHandler() {\n        return ctx._onKeyup();\n      })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    invert: \"invert\",\n    max: \"max\",\n    min: \"min\",\n    value: \"value\",\n    step: \"step\",\n    thumbLabel: \"thumbLabel\",\n    tickInterval: \"tickInterval\",\n    vertical: \"vertical\",\n    displayWith: \"displayWith\",\n    valueText: \"valueText\"\n  },\n  outputs: {\n    change: \"change\",\n    input: \"input\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵelement(3, \"div\", 3);\n      ɵngcc0.ɵɵelement(4, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelement(6, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n      ɵngcc0.ɵɵelement(8, \"div\", 8);\n      ɵngcc0.ɵɵelement(9, \"div\", 9);\n      ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n      ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n      ɵngcc0.ɵɵtext(12);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    }\n  },\n  directives: [ɵngcc3.NgStyle],\n  styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatSlider.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatSlider.propDecorators = {\n  invert: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  thumbLabel: [{\n    type: Input\n  }],\n  tickInterval: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  displayWith: [{\n    type: Input\n  }],\n  valueText: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  input: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  _sliderWrapper: [{\n    type: ViewChild,\n    args: ['sliderWrapper']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      exportAs: 'matSlider',\n      providers: [MAT_SLIDER_VALUE_ACCESSOR],\n      host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        // On Safari starting to slide temporarily triggers text selection mode which\n        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n        '(selectstart)': '$event.preventDefault()',\n        'class': 'mat-slider mat-focus-indicator',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n        // to the same value that we set on the slider's thumb which will be truncated.\n        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if mouse coordinates need to be inverted.\n        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue()',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n      inputs: ['disabled', 'color', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    input: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    invert: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    thumbLabel: [{\n      type: Input\n    }],\n    tickInterval: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    valueText: [{\n      type: Input\n    }],\n    _sliderWrapper: [{\n      type: ViewChild,\n      args: ['sliderWrapper']\n    }]\n  });\n})();\n/** Returns whether an event is a touch event. */\n\n\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\n\n\nfunction getPointerPositionOnPage(event) {\n  // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n  var point = isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n  return {\n    x: point.clientX,\n    y: point.clientY\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatSliderModule = function MatSliderModule() {\n  _classCallCheck(this, MatSliderModule);\n};\n\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\n\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, {\n    declarations: function declarations() {\n      return [MatSlider];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatSlider, MatCommonModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatSlider, MatCommonModule],\n      declarations: [MatSlider]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule }; //# sourceMappingURL=slider.js.map","map":{"version":3,"sources":["/Users/mohammedelmourabit/xrp/xpr/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js"],"names":["DOCUMENT","CommonModule","forwardRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","ChangeDetectorRef","Optional","Attribute","NgZone","Inject","Input","Output","ViewChild","NgModule","mixinTabIndex","mixinColor","mixinDisabled","MatCommonModule","FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","DOWN_ARROW","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","HOME","END","PAGE_DOWN","PAGE_UP","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","normalizePassiveListenerOptions","Subscription","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","MatSliderBase","_elementRef","_MatSliderMixinBase","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_ngZone","_document","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","event","disabled","isTouchEvent","button","run","oldValue","value","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","runOutsideAngular","element","nativeElement","addEventListener","v","_calculatePercentage","markForCheck","_roundToDecimal","toString","split","pop","length","min","max","parseFloat","toFixed","displayWith","options","_blurHostElement","_clamp","vertical","invert","percent","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_getThumbGap","display","_getDirection","offset","tickSize","backgroundSize","rotate","styles","shouldInvertAxis","_shouldInvertAxis","side","invertOffset","monitor","subscribe","origin","detectChanges","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","keyCode","_increment","defaultView","window","triggerEvent","document","isTouch","moveEventName","endEventName","_getWindow","numSteps","step","pos","top","left","size","height","width","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","getBoundingClientRect","focus","blur","fn","isDisabled","ɵfac","MatSlider_Factory","t","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatSlider_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","ɵɵlistener","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_keydown_HostBindingHandler","$event","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","ɵɵhostProperty","ɵɵattribute","valueText","displayValue","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatSlider_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","_getTrackBackgroundStyles","_getTrackFillStyles","_getTicksContainerStyles","_getTicksStyles","_getThumbContainerStyles","ɵɵtextInterpolate","directives","NgStyle","encapsulation","changeDetection","ctorParameters","decorators","String","args","undefined","propDecorators","ngDevMode","ɵsetClassMetadata","selector","providers","host","None","OnPush","point","touches","changedTouches","clientX","clientY","MatSliderModule","MatSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                const oldValue = this.value;\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = oldValue;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding) {\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled) {\n                    this._emitChangeEvent();\n                }\n                this._valueOnSlideStart = this._lastPointerEvent = null;\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 29, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\", valueText: \"valueText\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    valueText: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                    // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                    // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                    // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                    // to the same value that we set on the slider's thumb which will be truncated.\n                    '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], valueText: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map"]},"metadata":{},"sourceType":"module"}
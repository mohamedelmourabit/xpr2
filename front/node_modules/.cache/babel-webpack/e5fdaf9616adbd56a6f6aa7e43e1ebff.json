{"ast":null,"code":"import _createClass from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { NgModule, ɵɵdefineInjectable, ɵɵinject, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nvar LayoutModule = function LayoutModule() {\n  _classCallCheck(this, LayoutModule);\n};\n\nLayoutModule.ɵfac = function LayoutModule_Factory(t) {\n  return new (t || LayoutModule)();\n};\n\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: LayoutModule\n});\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Global registry for all dynamically-created, injected media queries. */\n\n\nvar mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\n\nvar mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\n\nvar MediaMatcher = /*#__PURE__*/function () {\n  function MediaMatcher(_platform) {\n    _classCallCheck(this, MediaMatcher);\n\n    this._platform = _platform;\n    this._matchMedia = this._platform.isBrowser && window.matchMedia ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n    // call it from a different scope.\n    window.matchMedia.bind(window) : noopMatchMedia;\n  }\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   */\n\n\n  _createClass(MediaMatcher, [{\n    key: \"matchMedia\",\n    value: function matchMedia(query) {\n      if (this._platform.WEBKIT) {\n        createEmptyStyleRule(query);\n      }\n\n      return this._matchMedia(query);\n    }\n  }]);\n\n  return MediaMatcher;\n}();\n\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) {\n  return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\n\nMediaMatcher.ɵprov = ɵɵdefineInjectable({\n  factory: function MediaMatcher_Factory() {\n    return new MediaMatcher(ɵɵinject(Platform));\n  },\n  token: MediaMatcher,\n  providedIn: \"root\"\n});\n\nMediaMatcher.ctorParameters = function () {\n  return [{\n    type: Platform\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\n\n\nfunction createEmptyStyleRule(query) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(\"@media \".concat(query, \" {.fx-query-test{ }}\"), 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\n\n\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: function addListener() {},\n    removeListener: function removeListener() {}\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Utility for checking the matching state of @media queries. */\n\n\nvar BreakpointObserver = /*#__PURE__*/function () {\n  function BreakpointObserver(_mediaMatcher, _zone) {\n    _classCallCheck(this, BreakpointObserver);\n\n    this._mediaMatcher = _mediaMatcher;\n    this._zone = _zone;\n    /**  A map of all media queries currently being listened for. */\n\n    this._queries = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n\n    this._destroySubject = new Subject();\n  }\n  /** Completes the active subject, signalling to all other observables to complete. */\n\n\n  _createClass(BreakpointObserver, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroySubject.next();\n\n      this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n\n  }, {\n    key: \"isMatched\",\n    value: function isMatched(value) {\n      var _this = this;\n\n      var queries = splitQueries(coerceArray(value));\n      return queries.some(function (mediaQuery) {\n        return _this._registerQuery(mediaQuery).mql.matches;\n      });\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n\n  }, {\n    key: \"observe\",\n    value: function observe(value) {\n      var _this2 = this;\n\n      var queries = splitQueries(coerceArray(value));\n      var observables = queries.map(function (query) {\n        return _this2._registerQuery(query).observable;\n      });\n      var stateObservable = combineLatest(observables); // Emit the first state immediately, and then debounce the subsequent emissions.\n\n      stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n      return stateObservable.pipe(map(function (breakpointStates) {\n        var response = {\n          matches: false,\n          breakpoints: {}\n        };\n        breakpointStates.forEach(function (_ref) {\n          var matches = _ref.matches,\n              query = _ref.query;\n          response.matches = response.matches || matches;\n          response.breakpoints[query] = matches;\n        });\n        return response;\n      }));\n    }\n    /** Registers a specific query to be listened for. */\n\n  }, {\n    key: \"_registerQuery\",\n    value: function _registerQuery(query) {\n      var _this3 = this;\n\n      // Only set up a new MediaQueryList if it is not already being listened for.\n      if (this._queries.has(query)) {\n        return this._queries.get(query);\n      }\n\n      var mql = this._mediaMatcher.matchMedia(query); // Create callback for match changes and add it is as a listener.\n\n\n      var queryObservable = new Observable(function (observer) {\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        var handler = function handler(e) {\n          return _this3._zone.run(function () {\n            return observer.next(e);\n          });\n        };\n\n        mql.addListener(handler);\n        return function () {\n          mql.removeListener(handler);\n        };\n      }).pipe(startWith(mql), map(function (_ref2) {\n        var matches = _ref2.matches;\n        return {\n          query: query,\n          matches: matches\n        };\n      }), takeUntil(this._destroySubject)); // Add the MediaQueryList to the set of queries.\n\n      var output = {\n        observable: queryObservable,\n        mql: mql\n      };\n\n      this._queries.set(query, output);\n\n      return output;\n    }\n  }]);\n\n  return BreakpointObserver;\n}();\n\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) {\n  return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nBreakpointObserver.ɵprov = ɵɵdefineInjectable({\n  factory: function BreakpointObserver_Factory() {\n    return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone));\n  },\n  token: BreakpointObserver,\n  providedIn: \"root\"\n});\n\nBreakpointObserver.ctorParameters = function () {\n  return [{\n    type: MediaMatcher\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MediaMatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\n\n\nfunction splitQueries(queries) {\n  return queries.map(function (query) {\n    return query.split(',');\n  }).reduce(function (a1, a2) {\n    return a1.concat(a2);\n  }).map(function (query) {\n    return query.trim();\n  });\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n\n\nvar Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher }; //# sourceMappingURL=layout.js.map","map":{"version":3,"sources":["/Users/mohammedelmourabit/xrp/xpr/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js"],"names":["NgModule","ɵɵdefineInjectable","ɵɵinject","Injectable","NgZone","coerceArray","Subject","combineLatest","concat","Observable","take","skip","debounceTime","map","startWith","takeUntil","Platform","ɵngcc0","ɵngcc1","LayoutModule","ɵfac","LayoutModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","MediaMatcher_Factory","ɵprov","factory","token","providedIn","ctorParameters","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","next","complete","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape"],"mappings":"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","sourcesContent":["import { NgModule, ɵɵdefineInjectable, ɵɵinject, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map"]},"metadata":{},"sourceType":"module"}
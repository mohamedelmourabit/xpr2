{"ast":null,"code":"import _assertThisInitialized from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Current version of Angular Material. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nvar _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nvar _c1 = [\"*\", \"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction MatOption_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n  }\n}\n\nvar _c2 = [\"*\"];\nvar VERSION = new Version('11.2.5');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\nvar AnimationCurves = function AnimationCurves() {\n  _classCallCheck(this, AnimationCurves);\n};\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\n\nvar AnimationDurations = function AnimationDurations() {\n  _classCallCheck(this, AnimationDurations);\n};\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n\nvar VERSION$1 = new Version('11.2.5');\n/** @docs-private */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\n\n\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\nvar MatCommonModule = /*#__PURE__*/function () {\n  function MatCommonModule(highContrastModeDetector, sanityChecks, document) {\n    _classCallCheck(this, MatCommonModule);\n\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    this._document = document; // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses(); // Note that `_sanityChecks` is typed to `any`, because AoT\n    // throws an error if we use the `SanityChecks` type directly.\n\n\n    this._sanityChecks = sanityChecks;\n\n    if (!this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n\n      this._checkThemeIsPresent();\n\n      this._checkCdkVersionMatch();\n\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n\n\n  _createClass(MatCommonModule, [{\n    key: \"_getWindow\",\n    value: function _getWindow() {\n      var win = this._document.defaultView || window;\n      return typeof win === 'object' && win ? win : null;\n    }\n    /** Whether any sanity checks are enabled. */\n\n  }, {\n    key: \"_checksAreEnabled\",\n    value: function _checksAreEnabled() {\n      // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n      // it. Since these checks can have performance implications and they aren't tree shakeable\n      // in their current form, we can leave the `isDevMode` check in for now.\n      // tslint:disable-next-line:ban\n      return isDevMode() && !this._isTestEnv();\n    }\n    /** Whether the code is running in tests. */\n\n  }, {\n    key: \"_isTestEnv\",\n    value: function _isTestEnv() {\n      var window = this._getWindow();\n\n      return window && (window.__karma__ || window.jasmine);\n    }\n  }, {\n    key: \"_checkDoctypeIsDefined\",\n    value: function _checkDoctypeIsDefined() {\n      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.doctype);\n\n      if (isEnabled && !this._document.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n      }\n    }\n  }, {\n    key: \"_checkThemeIsPresent\",\n    value: function _checkThemeIsPresent() {\n      // We need to assert that the `body` is defined, because these checks run very early\n      // and the `body` won't be defined if the consumer put their scripts in the `head`.\n      var isDisabled = !this._checksAreEnabled() || this._sanityChecks === false || !this._sanityChecks.theme;\n\n      if (isDisabled || !this._document.body || typeof getComputedStyle !== 'function') {\n        return;\n      }\n\n      var testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n\n      this._document.body.appendChild(testElement);\n\n      var computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n      if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n\n  }, {\n    key: \"_checkCdkVersionMatch\",\n    value: function _checkCdkVersionMatch() {\n      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.version);\n\n      if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n        console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' + 'the Angular CDK version (' + VERSION$2.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n      }\n    }\n  }]);\n\n  return MatCommonModule;\n}();\n\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[BidiModule], BidiModule]\n});\n\nMatCommonModule.ctorParameters = function () {\n  return [{\n    type: HighContrastModeDetector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MATERIAL_SANITY_CHECKS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [BidiModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `disabled` property. */\n\n\nfunction mixinDisabled(base) {\n  return /*#__PURE__*/function (_base) {\n    _inherits(_class, _base);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._disabled = false;\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      },\n      set: function set(value) {\n        this._disabled = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `color` property. */\n\n\nfunction mixinColor(base, defaultColor) {\n  return /*#__PURE__*/function (_base2) {\n    _inherits(_class2, _base2);\n\n    var _super2 = _createSuper(_class2);\n\n    function _class2() {\n      var _this2;\n\n      _classCallCheck(this, _class2);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2.defaultColor = defaultColor; // Set the default color that can be specified from the mixin.\n\n      _this2.color = defaultColor;\n      return _this2;\n    }\n\n    _createClass(_class2, [{\n      key: \"color\",\n      get: function get() {\n        return this._color;\n      },\n      set: function set(value) {\n        var colorPalette = value || this.defaultColor;\n\n        if (colorPalette !== this._color) {\n          if (this._color) {\n            this._elementRef.nativeElement.classList.remove(\"mat-\".concat(this._color));\n          }\n\n          if (colorPalette) {\n            this._elementRef.nativeElement.classList.add(\"mat-\".concat(colorPalette));\n          }\n\n          this._color = colorPalette;\n        }\n      }\n    }]);\n\n    return _class2;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `disableRipple` property. */\n\n\nfunction mixinDisableRipple(base) {\n  var Mixin = /*#__PURE__*/function (_base3) {\n    _inherits(Mixin, _base3);\n\n    var _super3 = _createSuper(Mixin);\n\n    function Mixin() {\n      var _this3;\n\n      _classCallCheck(this, Mixin);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this3 = _super3.call.apply(_super3, [this].concat(args));\n      _this3._disableRipple = false;\n      return _this3;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    _createClass(Mixin, [{\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      },\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return Mixin;\n  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n\n\n  return Mixin;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `tabIndex` property. */\n\n\nfunction mixinTabIndex(base) {\n  var defaultTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n  // but given we `extend` it from another class, we can assume a constructor being accessible.\n  var Mixin = /*#__PURE__*/function (_base4) {\n    _inherits(Mixin, _base4);\n\n    var _super4 = _createSuper(Mixin);\n\n    function Mixin() {\n      var _this4;\n\n      _classCallCheck(this, Mixin);\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this4 = _super4.call.apply(_super4, [this].concat(args));\n      _this4._tabIndex = defaultTabIndex;\n      _this4.defaultTabIndex = defaultTabIndex;\n      return _this4;\n    }\n\n    _createClass(Mixin, [{\n      key: \"tabIndex\",\n      get: function get() {\n        return this.disabled ? -1 : this._tabIndex;\n      },\n      set: function set(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n      }\n    }]);\n\n    return Mixin;\n  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n\n\n  return Mixin;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\n\n\nfunction mixinErrorState(base) {\n  return /*#__PURE__*/function (_base5) {\n    _inherits(_class3, _base5);\n\n    var _super5 = _createSuper(_class3);\n\n    function _class3() {\n      var _this5;\n\n      _classCallCheck(this, _class3);\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this5 = _super5.call.apply(_super5, [this].concat(args));\n      /** Whether the component is in an error state. */\n\n      _this5.errorState = false;\n      /**\n       * Stream that emits whenever the state of the input changes such that the wrapping\n       * `MatFormField` needs to run change detection.\n       */\n\n      _this5.stateChanges = new Subject();\n      return _this5;\n    }\n\n    _createClass(_class3, [{\n      key: \"updateErrorState\",\n      value: function updateErrorState() {\n        var oldState = this.errorState;\n        var parent = this._parentFormGroup || this._parentForm;\n        var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        var control = this.ngControl ? this.ngControl.control : null;\n        var newState = matcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n          this.errorState = newState;\n          this.stateChanges.next();\n        }\n      }\n    }]);\n\n    return _class3;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\n\n\nfunction mixinInitialized(base) {\n  return /*#__PURE__*/function (_base6) {\n    _inherits(_class4, _base6);\n\n    var _super6 = _createSuper(_class4);\n\n    function _class4() {\n      var _this6;\n\n      _classCallCheck(this, _class4);\n\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      _this6 = _super6.call.apply(_super6, [this].concat(args));\n      /** Whether this directive has been marked as initialized. */\n\n      _this6._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      _this6._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      _this6.initialized = new Observable(function (subscriber) {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (_this6._isInitialized) {\n          _this6._notifySubscriber(subscriber);\n        } else {\n          _this6._pendingSubscribers.push(subscriber);\n        }\n      });\n      return _this6;\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n\n\n    _createClass(_class4, [{\n      key: \"_markInitialized\",\n      value: function _markInitialized() {\n        if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n        }\n\n        this._isInitialized = true;\n\n        this._pendingSubscribers.forEach(this._notifySubscriber);\n\n        this._pendingSubscribers = null;\n      }\n      /** Emits and completes the subscriber stream (should only emit once). */\n\n    }, {\n      key: \"_notifySubscriber\",\n      value: function _notifySubscriber(subscriber) {\n        subscriber.next();\n        subscriber.complete();\n      }\n    }]);\n\n    return _class4;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\n\n\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\n\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter() {\n    _classCallCheck(this, DateAdapter);\n\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n\n\n  _createClass(DateAdapter, [{\n    key: \"getValidDateOrNull\",\n    value: function getValidDateOrNull(obj) {\n      return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n        return value;\n      }\n\n      return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n\n  }, {\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      this.locale = locale;\n\n      this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n\n  }, {\n    key: \"compareDate\",\n    value: function compareDate(first, second) {\n      return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n\n  }, {\n    key: \"sameDate\",\n    value: function sameDate(first, second) {\n      if (first && second) {\n        var firstValid = this.isValid(first);\n        var secondValid = this.isValid(second);\n\n        if (firstValid && secondValid) {\n          return !this.compareDate(first, second);\n        }\n\n        return firstValid == secondValid;\n      }\n\n      return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n\n  }, {\n    key: \"clampDate\",\n    value: function clampDate(date, min, max) {\n      if (min && this.compareDate(date, min) < 0) {\n        return min;\n      }\n\n      if (max && this.compareDate(date, max) > 0) {\n        return max;\n      }\n\n      return date;\n    }\n  }]);\n\n  return DateAdapter;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n\n/** Whether the browser supports the Intl API. */\n\nvar SUPPORTS_INTL_API; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\n\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\n\n\nvar DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\nvar ɵ0 = function ɵ0(i) {\n  return String(i + 1);\n};\n/** The default date names to use if Intl API is not available. */\n\n\nvar DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** The default day of the week names to use if Intl API is not available. */\n\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\n\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\n\nfunction range(length, valueFunction) {\n  var valuesArray = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n\n\nvar NativeDateAdapter = /*#__PURE__*/function (_DateAdapter) {\n  _inherits(NativeDateAdapter, _DateAdapter);\n\n  var _super7 = _createSuper(NativeDateAdapter);\n\n  function NativeDateAdapter(matDateLocale, platform) {\n    var _thisSuper, _this7;\n\n    _classCallCheck(this, NativeDateAdapter);\n\n    _this7 = _super7.call(this);\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n\n    _this7.useUtcForDisplay = true;\n\n    _get((_thisSuper = _assertThisInitialized(_this7), _getPrototypeOf(NativeDateAdapter.prototype)), \"setLocale\", _thisSuper).call(_thisSuper, matDateLocale); // IE does its own time zone correction, so we disable this on IE.\n\n\n    _this7.useUtcForDisplay = !platform.TRIDENT;\n    _this7._clampDate = platform.TRIDENT || platform.EDGE;\n    return _this7;\n  }\n\n  _createClass(NativeDateAdapter, [{\n    key: \"getYear\",\n    value: function getYear(date) {\n      return date.getFullYear();\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return date.getMonth();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return date.getDate();\n    }\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return date.getDay();\n    }\n  }, {\n    key: \"getMonthNames\",\n    value: function getMonthNames(style) {\n      var _this8 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          month: style,\n          timeZone: 'utc'\n        });\n        return range(12, function (i) {\n          return _this8._stripDirectionalityCharacters(_this8._format(dtf, new Date(2017, i, 1)));\n        });\n      }\n\n      return DEFAULT_MONTH_NAMES[style];\n    }\n  }, {\n    key: \"getDateNames\",\n    value: function getDateNames() {\n      var _this9 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          day: 'numeric',\n          timeZone: 'utc'\n        });\n        return range(31, function (i) {\n          return _this9._stripDirectionalityCharacters(_this9._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DATE_NAMES;\n    }\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames(style) {\n      var _this10 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          weekday: style,\n          timeZone: 'utc'\n        });\n        return range(7, function (i) {\n          return _this10._stripDirectionalityCharacters(_this10._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n  }, {\n    key: \"getYearName\",\n    value: function getYearName(date) {\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          year: 'numeric',\n          timeZone: 'utc'\n        });\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return String(this.getYear(date));\n    }\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n  }, {\n    key: \"getNumDaysInMonth\",\n    value: function getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return new Date(date.getTime());\n    }\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n          throw Error(\"Invalid month index \\\"\".concat(month, \"\\\". Month index has to be between 0 and 11.\"));\n        }\n\n        if (date < 1) {\n          throw Error(\"Invalid date \\\"\".concat(date, \"\\\". Date has to be greater than 0.\"));\n        }\n      }\n\n      var result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\" for month with index \\\"\").concat(month, \"\\\".\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"today\",\n    value: function today() {\n      return new Date();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n\n      return value ? new Date(Date.parse(value)) : null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n\n      if (SUPPORTS_INTL_API) {\n        // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n        // if we attempt to format a date whose year is less than 1 or greater than 9999.\n        if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n          date = this.clone(date);\n          date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n        }\n\n        displayFormat = Object.assign(Object.assign({}, displayFormat), {\n          timeZone: 'utc'\n        });\n        var dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return this._stripDirectionalityCharacters(date.toDateString());\n    }\n  }, {\n    key: \"addCalendarYears\",\n    value: function addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n  }, {\n    key: \"addCalendarMonths\",\n    value: function addCalendarMonths(date, months) {\n      var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n\n\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n\n      return newDate;\n    }\n  }, {\n    key: \"addCalendarDays\",\n    value: function addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n  }, {\n    key: \"toIso8601\",\n    value: function toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n\n\n        if (ISO_8601_REGEX.test(value)) {\n          var date = new Date(value);\n\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n\n      return _get(_getPrototypeOf(NativeDateAdapter.prototype), \"deserialize\", this).call(this, value);\n    }\n  }, {\n    key: \"isDateInstance\",\n    value: function isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return !isNaN(date.getTime());\n    }\n  }, {\n    key: \"invalid\",\n    value: function invalid() {\n      return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n\n  }, {\n    key: \"_createDateWithOverflow\",\n    value: function _createDateWithOverflow(year, month, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setFullYear` and `setHours` instead.\n      var d = new Date();\n      d.setFullYear(year, month, date);\n      d.setHours(0, 0, 0, 0);\n      return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n\n  }, {\n    key: \"_2digit\",\n    value: function _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n\n  }, {\n    key: \"_stripDirectionalityCharacters\",\n    value: function _stripDirectionalityCharacters(str) {\n      return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n\n  }, {\n    key: \"_format\",\n    value: function _format(dtf, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n      var d = new Date();\n      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n      return dtf.format(d);\n    }\n  }]);\n\n  return NativeDateAdapter;\n}(DateAdapter);\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform));\n};\n\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n\nNativeDateAdapter.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }, {\n    type: Platform\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar NativeDateModule = function NativeDateModule() {\n  _classCallCheck(this, NativeDateModule);\n};\n\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\n\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function imports() {\n      return [PlatformModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\nvar ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\n\nvar MatNativeDateModule = function MatNativeDateModule() {\n  _classCallCheck(this, MatNativeDateModule);\n};\n\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\n\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0$1\n  }],\n  imports: [[NativeDateModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n\n\nvar ShowOnDirtyErrorStateMatcher = /*#__PURE__*/function () {\n  function ShowOnDirtyErrorStateMatcher() {\n    _classCallCheck(this, ShowOnDirtyErrorStateMatcher);\n  }\n\n  _createClass(ShowOnDirtyErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n  }]);\n\n  return ShowOnDirtyErrorStateMatcher;\n}();\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n\n\nvar ErrorStateMatcher = /*#__PURE__*/function () {\n  function ErrorStateMatcher() {\n    _classCallCheck(this, ErrorStateMatcher);\n  }\n\n  _createClass(ErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n  }]);\n\n  return ErrorStateMatcher;\n}();\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nvar MatLine = function MatLine() {\n  _classCallCheck(this, MatLine);\n};\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\n\n\nfunction setLines(lines, element) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mat';\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(function (_ref) {\n    var length = _ref.length;\n    setClass(element, \"\".concat(prefix, \"-2-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-3-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-multi-line\"), false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, \"\".concat(prefix, \"-\").concat(length, \"-line\"), true);\n    } else if (length > 3) {\n      setClass(element, \"\".concat(prefix, \"-multi-line\"), true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\n\n\nfunction setClass(element, className, isAdd) {\n  var classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n\nvar MatLineModule = function MatLineModule() {\n  _classCallCheck(this, MatLineModule);\n};\n\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\n\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Reference to a previously launched ripple element.\n */\n\n\nvar RippleRef = /*#__PURE__*/function () {\n  function RippleRef(_renderer,\n  /** Reference to the ripple HTML element. */\n  element,\n  /** Ripple configuration used for the ripple. */\n  config) {\n    _classCallCheck(this, RippleRef);\n\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /** Current state of the ripple. */\n\n    this.state = 3\n    /* HIDDEN */\n    ;\n  }\n  /** Fades out the ripple element. */\n\n\n  _createClass(RippleRef, [{\n    key: \"fadeOut\",\n    value: function fadeOut() {\n      this._renderer.fadeOutRipple(this);\n    }\n  }]);\n\n  return RippleRef;\n}();\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\n\n\nvar defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\n\nvar ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\n\nvar passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/** Events that signal that the pointer is down. */\n\nvar pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\n\nvar pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\n\nvar RippleRenderer = /*#__PURE__*/function () {\n  function RippleRenderer(_target, _ngZone, elementOrElementRef, platform) {\n    _classCallCheck(this, RippleRenderer);\n\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /** Whether the pointer is currently down or not. */\n\n    this._isPointerDown = false;\n    /** Set of currently active ripple references. */\n\n    this._activeRipples = new Set();\n    /** Whether pointer-up event listeners have been registered. */\n\n    this._pointerUpEventsRegistered = false; // Only do anything if we're on the browser.\n\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n\n\n  _createClass(RippleRenderer, [{\n    key: \"fadeInRipple\",\n    value: function fadeInRipple(x, y) {\n      var _this11 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n\n      if (config.centered) {\n        x = containerRect.left + containerRect.width / 2;\n        y = containerRect.top + containerRect.height / 2;\n      }\n\n      var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n      var offsetX = x - containerRect.left;\n      var offsetY = y - containerRect.top;\n      var duration = animationConfig.enterDuration;\n      var ripple = document.createElement('div');\n      ripple.classList.add('mat-ripple-element');\n      ripple.style.left = \"\".concat(offsetX - radius, \"px\");\n      ripple.style.top = \"\".concat(offsetY - radius, \"px\");\n      ripple.style.height = \"\".concat(radius * 2, \"px\");\n      ripple.style.width = \"\".concat(radius * 2, \"px\"); // If a custom color has been specified, set it as inline style. If no color is\n      // set, the default color will be applied through the ripple theme styles.\n\n      if (config.color != null) {\n        ripple.style.backgroundColor = config.color;\n      }\n\n      ripple.style.transitionDuration = \"\".concat(duration, \"ms\");\n\n      this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n      // ripple elements. This is critical because then the `scale` would not animate properly.\n\n\n      enforceStyleRecalculation(ripple);\n      ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.\n\n      var rippleRef = new RippleRef(this, ripple, config);\n      rippleRef.state = 0\n      /* FADING_IN */\n      ; // Add the ripple reference to the list of all active ripples.\n\n      this._activeRipples.add(rippleRef);\n\n      if (!config.persistent) {\n        this._mostRecentTransientRipple = rippleRef;\n      } // Wait for the ripple element to be completely faded in.\n      // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n\n\n      this._runTimeoutOutsideZone(function () {\n        var isMostRecentTransientRipple = rippleRef === _this11._mostRecentTransientRipple;\n        rippleRef.state = 1\n        /* VISIBLE */\n        ; // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n\n        if (!config.persistent && (!isMostRecentTransientRipple || !_this11._isPointerDown)) {\n          rippleRef.fadeOut();\n        }\n      }, duration);\n\n      return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n\n  }, {\n    key: \"fadeOutRipple\",\n    value: function fadeOutRipple(rippleRef) {\n      var wasActive = this._activeRipples.delete(rippleRef);\n\n      if (rippleRef === this._mostRecentTransientRipple) {\n        this._mostRecentTransientRipple = null;\n      } // Clear out the cached bounding rect if we have no more ripples.\n\n\n      if (!this._activeRipples.size) {\n        this._containerRect = null;\n      } // For ripples that are not active anymore, don't re-run the fade-out animation.\n\n\n      if (!wasActive) {\n        return;\n      }\n\n      var rippleEl = rippleRef.element;\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n      rippleEl.style.transitionDuration = \"\".concat(animationConfig.exitDuration, \"ms\");\n      rippleEl.style.opacity = '0';\n      rippleRef.state = 2\n      /* FADING_OUT */\n      ; // Once the ripple faded out, the ripple can be safely removed from the DOM.\n\n      this._runTimeoutOutsideZone(function () {\n        rippleRef.state = 3\n        /* HIDDEN */\n        ;\n        rippleEl.parentNode.removeChild(rippleEl);\n      }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._activeRipples.forEach(function (ripple) {\n        return ripple.fadeOut();\n      });\n    }\n    /** Sets up the trigger event listeners */\n\n  }, {\n    key: \"setupTriggerEvents\",\n    value: function setupTriggerEvents(elementOrElementRef) {\n      var element = coerceElement(elementOrElementRef);\n\n      if (!element || element === this._triggerElement) {\n        return;\n      } // Remove all previously registered event listeners from the trigger element.\n\n\n      this._removeTriggerEvents();\n\n      this._triggerElement = element;\n\n      this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (event.type === 'mousedown') {\n        this._onMousedown(event);\n      } else if (event.type === 'touchstart') {\n        this._onTouchStart(event);\n      } else {\n        this._onPointerUp();\n      } // If pointer-up events haven't been registered yet, do so now.\n      // We do this on-demand in order to reduce the total number of event listeners\n      // registered by the ripples, which speeds up the rendering time for large UIs.\n\n\n      if (!this._pointerUpEventsRegistered) {\n        this._registerEvents(pointerUpEvents);\n\n        this._pointerUpEventsRegistered = true;\n      }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n\n  }, {\n    key: \"_onMousedown\",\n    value: function _onMousedown(event) {\n      // Screen readers will fire fake mouse events for space/enter. Skip launching a\n      // ripple in this case for consistency with the non-screen-reader experience.\n      var isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      var isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        this._isPointerDown = true;\n        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n      }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n\n  }, {\n    key: \"_onTouchStart\",\n    value: function _onTouchStart(event) {\n      if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        this._lastTouchStartEvent = Date.now();\n        this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n        // their finger down, but used another finger to tap the element again.\n\n        var touches = event.changedTouches;\n\n        for (var i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n    /** Function being called whenever the trigger is being released. */\n\n  }, {\n    key: \"_onPointerUp\",\n    value: function _onPointerUp() {\n      if (!this._isPointerDown) {\n        return;\n      }\n\n      this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n      this._activeRipples.forEach(function (ripple) {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n        var isVisible = ripple.state === 1\n        /* VISIBLE */\n        || ripple.config.terminateOnPointerUp && ripple.state === 0\n        /* FADING_IN */\n        ;\n\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n\n  }, {\n    key: \"_runTimeoutOutsideZone\",\n    value: function _runTimeoutOutsideZone(fn) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._ngZone.runOutsideAngular(function () {\n        return setTimeout(fn, delay);\n      });\n    }\n    /** Registers event listeners for a given list of events. */\n\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents(eventTypes) {\n      var _this12 = this;\n\n      this._ngZone.runOutsideAngular(function () {\n        eventTypes.forEach(function (type) {\n          _this12._triggerElement.addEventListener(type, _this12, passiveEventOptions);\n        });\n      });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n\n  }, {\n    key: \"_removeTriggerEvents\",\n    value: function _removeTriggerEvents() {\n      var _this13 = this;\n\n      if (this._triggerElement) {\n        pointerDownEvents.forEach(function (type) {\n          _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n        });\n\n        if (this._pointerUpEventsRegistered) {\n          pointerUpEvents.forEach(function (type) {\n            _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n          });\n        }\n      }\n    }\n  }]);\n\n  return RippleRenderer;\n}();\n/** Enforces a style recalculation of a DOM element by computing its styles. */\n\n\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to specify the global ripple options. */\n\n\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nvar MatRipple = /*#__PURE__*/function () {\n  function MatRipple(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    _classCallCheck(this, MatRipple);\n\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n\n\n  _createClass(MatRipple, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n\n  }, {\n    key: \"trigger\",\n    get: function get() {\n      return this._trigger || this._elementRef.nativeElement;\n    },\n    set: function set(trigger) {\n      this._trigger = trigger;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._isInitialized = true;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n\n  }, {\n    key: \"rippleConfig\",\n    get: function get() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}), this.animation),\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n\n  }, {\n    key: \"rippleDisabled\",\n    get: function get() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n\n  }, {\n    key: \"_setupTriggerEventsIfEnabled\",\n    value: function _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n\n  }, {\n    key: \"launch\",\n    value: function launch(configOrX) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var config = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n      }\n    }\n  }]);\n\n  return MatRipple;\n}();\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n\nMatRipple.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatRippleModule = function MatRippleModule() {\n  _classCallCheck(this, MatRippleModule);\n};\n\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\n\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatCommonModule, PlatformModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function declarations() {\n      return [MatRipple];\n    },\n    imports: function imports() {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n\n\nvar MatPseudoCheckbox = function MatPseudoCheckbox(_animationMode) {\n  _classCallCheck(this, MatPseudoCheckbox);\n\n  this._animationMode = _animationMode;\n  /** Display state of the checkbox. */\n\n  this.state = 'unchecked';\n  /** Whether the checkbox is disabled. */\n\n  this.disabled = false;\n};\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatPseudoCheckbox.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatPseudoCheckboxModule = function MatPseudoCheckboxModule() {\n  _classCallCheck(this, MatPseudoCheckboxModule);\n};\n\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\n\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatCommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    imports: [MatCommonModule],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to provide the parent component to options.\n */\n\n\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n\n/** @docs-private */\n\nvar MatOptgroupBase = function MatOptgroupBase() {\n  _classCallCheck(this, MatOptgroupBase);\n};\n\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase); // Counter for unique group ids.\n\n\nvar _uniqueOptgroupIdCounter = 0;\n\nvar _MatOptgroupBase = /*#__PURE__*/function (_MatOptgroupMixinBase2) {\n  _inherits(_MatOptgroupBase, _MatOptgroupMixinBase2);\n\n  var _super8 = _createSuper(_MatOptgroupBase);\n\n  function _MatOptgroupBase(parent) {\n    var _this14;\n\n    _classCallCheck(this, _MatOptgroupBase);\n\n    var _a;\n\n    _this14 = _super8.call(this);\n    /** Unique id for the underlying label. */\n\n    _this14._labelId = \"mat-optgroup-label-\".concat(_uniqueOptgroupIdCounter++);\n    _this14._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    return _this14;\n  }\n\n  return _MatOptgroupBase;\n}(_MatOptgroupMixinBase);\n\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return new (t || _MatOptgroupBase)(ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n};\n\n_MatOptgroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n_MatOptgroupBase.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\n_MatOptgroupBase.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\n\nvar MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nvar MatOptgroup = /*#__PURE__*/function (_MatOptgroupBase2) {\n  _inherits(MatOptgroup, _MatOptgroupBase2);\n\n  var _super9 = _createSuper(MatOptgroup);\n\n  function MatOptgroup() {\n    _classCallCheck(this, MatOptgroup);\n\n    return _super9.apply(this, arguments);\n  }\n\n  return MatOptgroup;\n}(_MatOptgroupBase);\n\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) {\n  return ɵMatOptgroup_BaseFactory(t || MatOptgroup);\n};\n\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [1, \"mat-optgroup\"],\n  hostVars: 5,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nvar ɵMatOptgroup_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n        '[class.mat-optgroup-disabled]': 'disabled'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\n\n\nvar _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\n\nvar MatOptionSelectionChange = function MatOptionSelectionChange(\n/** Reference to the option that emitted the event. */\nsource) {\n  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, MatOptionSelectionChange);\n\n  this.source = source;\n  this.isUserInput = isUserInput;\n};\n\nvar _MatOptionBase = /*#__PURE__*/function () {\n  function _MatOptionBase(_element, _changeDetectorRef, _parent, group) {\n    _classCallCheck(this, _MatOptionBase);\n\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n\n    this.id = \"mat-option-\".concat(_uniqueIdCounter++);\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n\n    this._stateChanges = new Subject();\n  }\n  /** Whether the wrapping component is in multiple selection mode. */\n\n\n  _createClass(_MatOptionBase, [{\n    key: \"multiple\",\n    get: function get() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /** Whether the option is disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.group && this.group.disabled || this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return this._parent && this._parent.disableRipple;\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n\n  }, {\n    key: \"viewValue\",\n    get: function get() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      if (!this._selected) {\n        this._selected = true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Deselects the option. */\n\n  }, {\n    key: \"deselect\",\n    value: function deselect() {\n      if (this._selected) {\n        this._selected = false;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Sets focus onto this option. */\n\n  }, {\n    key: \"focus\",\n    value: function focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      var element = this._getHostElement();\n\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n\n  }, {\n    key: \"setActiveStyles\",\n    value: function setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n\n  }, {\n    key: \"setInactiveStyles\",\n    value: function setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n\n  }, {\n    key: \"_selectViaInteraction\",\n    value: function _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n\n  }, {\n    key: \"_getAriaSelected\",\n    value: function _getAriaSelected() {\n      return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        var viewValue = this.viewValue;\n\n        if (viewValue !== this._mostRecentViewValue) {\n          this._mostRecentViewValue = viewValue;\n\n          this._stateChanges.next();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n\n  }, {\n    key: \"_emitSelectionChangeEvent\",\n    value: function _emitSelectionChangeEvent() {\n      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n  }]);\n\n  return _MatOptionBase;\n}();\n\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase));\n};\n\n_MatOptionBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n\n_MatOptionBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined\n  }, {\n    type: _MatOptgroupBase\n  }];\n};\n\n_MatOptionBase.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\n\nvar MatOption = /*#__PURE__*/function (_MatOptionBase2) {\n  _inherits(MatOption, _MatOptionBase2);\n\n  var _super10 = _createSuper(MatOption);\n\n  function MatOption(element, changeDetectorRef, parent, group) {\n    _classCallCheck(this, MatOption);\n\n    return _super10.call(this, element, changeDetectorRef, parent, group);\n  }\n\n  return MatOption;\n}(_MatOptionBase);\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\n\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 4,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, MatOption_span_3_Template, 2, 1, \"span\", 2);\n      ɵngcc0.ɵɵelement(4, \"div\", 3);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatOption.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }]\n  }, {\n    type: MatOptgroup,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTGROUP]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option mat-focus-indicator'\n      },\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    var optionsArray = options.toArray();\n    var groups = optionGroups.toArray();\n    var groupCounter = 0;\n\n    for (var i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\n\n\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatOptionModule = function MatOptionModule() {\n  _classCallCheck(this, MatOptionModule);\n};\n\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\n\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function declarations() {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function imports() {\n      return [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function exports() {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a }; //# sourceMappingURL=core.js.map","map":{"version":3,"sources":["/Users/mohammedelmourabit/xrp/xpr/node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js"],"names":["Version","InjectionToken","isDevMode","NgModule","Optional","Inject","inject","LOCALE_ID","Injectable","ɵɵdefineInjectable","Directive","ElementRef","NgZone","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","ChangeDetectorRef","Output","HighContrastModeDetector","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","BidiModule","VERSION","VERSION$2","DOCUMENT","CommonModule","coerceBooleanProperty","coerceNumberProperty","coerceElement","Subject","Observable","Platform","PlatformModule","normalizePassiveListenerOptions","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","MatOption_span_3_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵadvance","ɵɵtextInterpolate1","group","label","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","highContrastModeDetector","sanityChecks","document","_hasDoneGlobalChecks","_document","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","win","defaultView","window","_isTestEnv","_getWindow","__karma__","jasmine","isEnabled","_checksAreEnabled","doctype","console","warn","isDisabled","theme","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","version","full","ɵfac","MatCommonModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ctorParameters","undefined","decorators","args","ngJitMode","ɵɵsetNgModuleScope","exports","ngDevMode","ɵsetClassMetadata","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","Mixin","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","mixinErrorState","errorState","stateChanges","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","obj","isDateInstance","isValid","invalid","locale","first","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","_a","DEFAULT_MONTH_NAMES","ɵ0","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDay","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","parse","displayFormat","clone","setFullYear","Math","Object","assign","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setHours","n","slice","str","replace","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","ɵprov","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","provide","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","MatLineModule","MatLineModule_Factory","declarations","RippleRef","_renderer","config","state","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","Set","_pointerUpEventsRegistered","isBrowser","_containerElement","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","fadeOut","wasActive","delete","size","rippleEl","opacity","parentNode","_triggerElement","_removeTriggerEvents","_registerEvents","event","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","fn","delay","runOutsideAngular","setTimeout","eventTypes","addEventListener","removeEventListener","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","fadeOutAll","setupTriggerEvents","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","propDecorators","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MAT_OPTION_PARENT_COMPONENT","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","_MatOptgroupBase_Factory","features","ɵɵInheritDefinitionFeature","MAT_OPTGROUP","MatOptgroup","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","ɵɵProvidersFeature","useExisting","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵgetInheritedFactory","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","_element","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","markForCheck","_emitSelectionChangeEvent","_origin","options","focus","viewValue","keyCode","_selectViaInteraction","preventDefault","emit","_MatOptionBase_Factory","outputs","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","_handleKeydown","ɵɵhostProperty","_getTabIndex","_getAriaSelected","active","MatOption_Template","ɵɵtemplate","directives","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory","ɵangular_material_src_material_core_core_a"],"mappings":"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","sourcesContent":["import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nfunction MatOption_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('11.2.5');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION$1 = new Version('11.2.5');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, sanityChecks, document) {\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const win = this._document.defaultView || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /** Whether any sanity checks are enabled. */\n    _checksAreEnabled() {\n        // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n        // it. Since these checks can have performance implications and they aren't tree shakeable\n        // in their current form, we can leave the `isDevMode` check in for now.\n        // tslint:disable-next-line:ban\n        return isDevMode() && !this._isTestEnv();\n    }\n    /** Whether the code is running in tests. */\n    _isTestEnv() {\n        const window = this._getWindow();\n        return window && (window.__karma__ || window.jasmine);\n    }\n    _checkDoctypeIsDefined() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.doctype);\n        if (isEnabled && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !this._sanityChecks.theme);\n        if (isDisabled || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n    _checkCdkVersionMatch() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT)); };\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule], BidiModule] });\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disabled` property. */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() { return this._disabled; }\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `color` property. */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() { return this._color; }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disableRipple` property. */\nfunction mixinDisableRipple(base) {\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `tabIndex` property. */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n    // but given we `extend` it from another class, we can assume a constructor being accessible.\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach((type) => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((type) => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((type) => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase {\n}\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        var _a;\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    }\n}\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) { return new (t || _MatOptgroupBase)(ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8)); };\n_MatOptgroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptgroupBase, inputs: { label: \"label\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatOptgroupBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }, { type: Optional }] }\n];\n_MatOptgroupBase.propDecorators = {\n    label: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }, {\n                type: Optional\n            }] }]; }, { label: [{\n            type: Input\n        }] }); })();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [1, \"mat-optgroup\"], hostVars: 5, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatOptgroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    '[attr.role]': '_inert ? null : \"group\"',\n                    '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                    '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    '[class.mat-optgroup-disabled]': 'disabled'\n                },\n                providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /** Whether or not the option is currently selected. */\n    get selected() { return this._selected; }\n    /** Whether the option is disabled. */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) { return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase)); };\n_MatOptionBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptionBase, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" } });\n_MatOptionBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined },\n    { type: _MatOptgroupBase }\n];\n_MatOptionBase.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, exportAs: [\"matOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 5, vars: 4, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatOption_span_3_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTGROUP,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTGROUP]\n            }] }]; }, null); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map"]},"metadata":{},"sourceType":"module"}
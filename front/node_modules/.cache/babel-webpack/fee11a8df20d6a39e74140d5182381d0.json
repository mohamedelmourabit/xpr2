{"ast":null,"code":"import _createClass from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/mohammedelmourabit/xrp/xpr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n  }\n}\n\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7._changePageSize($event.value);\n    });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n  }\n}\n\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n  }\n}\n\nfunction MatPaginator_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n  }\n}\n\nfunction MatPaginator_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.firstPage();\n    });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\n\nfunction MatPaginator_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.lastPage();\n    });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n  }\n}\n\nvar MatPaginatorIntl = function MatPaginatorIntl() {\n  _classCallCheck(this, MatPaginatorIntl);\n\n  /**\n   * Stream to emit from when labels are changed. Use this to notify components when the labels have\n   * changed after initialization.\n   */\n  this.changes = new Subject();\n  /** A label for the page size selector. */\n\n  this.itemsPerPageLabel = 'Items per page:';\n  /** A label for the button that increments the current page. */\n\n  this.nextPageLabel = 'Next page';\n  /** A label for the button that decrements the current page. */\n\n  this.previousPageLabel = 'Previous page';\n  /** A label for the button that moves to the first page. */\n\n  this.firstPageLabel = 'First page';\n  /** A label for the button that moves to the last page. */\n\n  this.lastPageLabel = 'Last page';\n  /** A label for the range of items within the current page and the length of the whole list. */\n\n  this.getRangeLabel = function (page, pageSize, length) {\n    if (length == 0 || pageSize == 0) {\n      return \"0 of \".concat(length);\n    }\n\n    length = Math.max(length, 0);\n    var startIndex = page * pageSize; // If the start index exceeds the list length, do not try and fix the end index to the end.\n\n    var endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n    return \"\".concat(startIndex + 1, \" \\u2013 \").concat(endIndex, \" of \").concat(length);\n  };\n};\n\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) {\n  return new (t || MatPaginatorIntl)();\n};\n\nMatPaginatorIntl.ɵprov = ɵɵdefineInjectable({\n  factory: function MatPaginatorIntl_Factory() {\n    return new MatPaginatorIntl();\n  },\n  token: MatPaginatorIntl,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/** @docs-private */\n\n\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\n\n\nvar MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The default page size if there is no page size and there are no provided page size options. */\n\nvar DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\n\nvar PageEvent = function PageEvent() {\n  _classCallCheck(this, PageEvent);\n};\n/** Injection token that can be used to provide the default options for the paginator module. */\n\n\nvar MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS'); // Boilerplate for applying mixins to _MatPaginatorBase.\n\n/** @docs-private */\n\nvar MatPaginatorMixinBase = function MatPaginatorMixinBase() {\n  _classCallCheck(this, MatPaginatorMixinBase);\n};\n\nvar _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(MatPaginatorMixinBase));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\n\n\nvar _MatPaginatorBase = /*#__PURE__*/function (_MatPaginatorMixinBas) {\n  _inherits(_MatPaginatorBase, _MatPaginatorMixinBas);\n\n  var _super = _createSuper(_MatPaginatorBase);\n\n  function _MatPaginatorBase(_intl, _changeDetectorRef, defaults) {\n    var _this;\n\n    _classCallCheck(this, _MatPaginatorBase);\n\n    _this = _super.call(this);\n    _this._intl = _intl;\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._pageIndex = 0;\n    _this._length = 0;\n    _this._pageSizeOptions = [];\n    _this._hidePageSize = false;\n    _this._showFirstLastButtons = false;\n    /** Event emitted when the paginator changes the page size or page index. */\n\n    _this.page = new EventEmitter();\n    _this._intlChanges = _intl.changes.subscribe(function () {\n      return _this._changeDetectorRef.markForCheck();\n    });\n\n    if (defaults) {\n      var pageSize = defaults.pageSize,\n          pageSizeOptions = defaults.pageSizeOptions,\n          hidePageSize = defaults.hidePageSize,\n          showFirstLastButtons = defaults.showFirstLastButtons;\n\n      if (pageSize != null) {\n        _this._pageSize = pageSize;\n      }\n\n      if (pageSizeOptions != null) {\n        _this._pageSizeOptions = pageSizeOptions;\n      }\n\n      if (hidePageSize != null) {\n        _this._hidePageSize = hidePageSize;\n      }\n\n      if (showFirstLastButtons != null) {\n        _this._showFirstLastButtons = showFirstLastButtons;\n      }\n    }\n\n    return _this;\n  }\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n\n\n  _createClass(_MatPaginatorBase, [{\n    key: \"pageIndex\",\n    get: function get() {\n      return this._pageIndex;\n    },\n    set: function set(value) {\n      this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._length;\n    },\n    set: function set(value) {\n      this._length = coerceNumberProperty(value);\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n\n  }, {\n    key: \"pageSize\",\n    get: function get() {\n      return this._pageSize;\n    },\n    set: function set(value) {\n      this._pageSize = Math.max(coerceNumberProperty(value), 0);\n\n      this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n\n  }, {\n    key: \"pageSizeOptions\",\n    get: function get() {\n      return this._pageSizeOptions;\n    },\n    set: function set(value) {\n      this._pageSizeOptions = (value || []).map(function (p) {\n        return coerceNumberProperty(p);\n      });\n\n      this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n\n  }, {\n    key: \"hidePageSize\",\n    get: function get() {\n      return this._hidePageSize;\n    },\n    set: function set(value) {\n      this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n\n  }, {\n    key: \"showFirstLastButtons\",\n    get: function get() {\n      return this._showFirstLastButtons;\n    },\n    set: function set(value) {\n      this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._initialized = true;\n\n      this._updateDisplayedPageSizeOptions();\n\n      this._markInitialized();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      if (!this.hasNextPage()) {\n        return;\n      }\n\n      var previousPageIndex = this.pageIndex;\n      this.pageIndex++;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n\n  }, {\n    key: \"previousPage\",\n    value: function previousPage() {\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n\n      var previousPageIndex = this.pageIndex;\n      this.pageIndex--;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n\n  }, {\n    key: \"firstPage\",\n    value: function firstPage() {\n      // hasPreviousPage being false implies at the start\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n\n      var previousPageIndex = this.pageIndex;\n      this.pageIndex = 0;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n\n  }, {\n    key: \"lastPage\",\n    value: function lastPage() {\n      // hasNextPage being false implies at the end\n      if (!this.hasNextPage()) {\n        return;\n      }\n\n      var previousPageIndex = this.pageIndex;\n      this.pageIndex = this.getNumberOfPages() - 1;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n\n  }, {\n    key: \"hasPreviousPage\",\n    value: function hasPreviousPage() {\n      return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n\n  }, {\n    key: \"hasNextPage\",\n    value: function hasNextPage() {\n      var maxPageIndex = this.getNumberOfPages() - 1;\n      return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n\n  }, {\n    key: \"getNumberOfPages\",\n    value: function getNumberOfPages() {\n      if (!this.pageSize) {\n        return 0;\n      }\n\n      return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n\n  }, {\n    key: \"_changePageSize\",\n    value: function _changePageSize(pageSize) {\n      // Current page needs to be updated to reflect the new page size. Navigate to the page\n      // containing the previous page's first item.\n      var startIndex = this.pageIndex * this.pageSize;\n      var previousPageIndex = this.pageIndex;\n      this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n      this.pageSize = pageSize;\n\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n\n  }, {\n    key: \"_nextButtonsDisabled\",\n    value: function _nextButtonsDisabled() {\n      return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n\n  }, {\n    key: \"_previousButtonsDisabled\",\n    value: function _previousButtonsDisabled() {\n      return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n\n  }, {\n    key: \"_updateDisplayedPageSizeOptions\",\n    value: function _updateDisplayedPageSizeOptions() {\n      if (!this._initialized) {\n        return;\n      } // If no page size is provided, use the first page size option or the default page size.\n\n\n      if (!this.pageSize) {\n        this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n      }\n\n      this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n      if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n        this._displayedPageSizeOptions.push(this.pageSize);\n      } // Sort the numbers using a number-specific sort function.\n\n\n      this._displayedPageSizeOptions.sort(function (a, b) {\n        return a - b;\n      });\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n\n  }, {\n    key: \"_emitPageEvent\",\n    value: function _emitPageEvent(previousPageIndex) {\n      this.page.emit({\n        previousPageIndex: previousPageIndex,\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize,\n        length: this.length\n      });\n    }\n  }]);\n\n  return _MatPaginatorBase;\n}(_MatPaginatorMixinBase);\n\n_MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) {\n  return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined));\n};\n\n_MatPaginatorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatPaginatorBase,\n  inputs: {\n    pageIndex: \"pageIndex\",\n    length: \"length\",\n    pageSize: \"pageSize\",\n    pageSizeOptions: \"pageSizeOptions\",\n    hidePageSize: \"hidePageSize\",\n    showFirstLastButtons: \"showFirstLastButtons\",\n    color: \"color\"\n  },\n  outputs: {\n    page: \"page\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n_MatPaginatorBase.ctorParameters = function () {\n  return [{\n    type: MatPaginatorIntl\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined\n  }];\n};\n\n_MatPaginatorBase.propDecorators = {\n  color: [{\n    type: Input\n  }],\n  pageIndex: [{\n    type: Input\n  }],\n  length: [{\n    type: Input\n  }],\n  pageSize: [{\n    type: Input\n  }],\n  pageSizeOptions: [{\n    type: Input\n  }],\n  hidePageSize: [{\n    type: Input\n  }],\n  showFirstLastButtons: [{\n    type: Input\n  }],\n  page: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatPaginatorBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: MatPaginatorIntl\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }];\n  }, {\n    page: [{\n      type: Output\n    }],\n    pageIndex: [{\n      type: Input\n    }],\n    length: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    pageSizeOptions: [{\n      type: Input\n    }],\n    hidePageSize: [{\n      type: Input\n    }],\n    showFirstLastButtons: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n\n\nvar MatPaginator = /*#__PURE__*/function (_MatPaginatorBase2) {\n  _inherits(MatPaginator, _MatPaginatorBase2);\n\n  var _super2 = _createSuper(MatPaginator);\n\n  function MatPaginator(intl, changeDetectorRef, defaults) {\n    var _this2;\n\n    _classCallCheck(this, MatPaginator);\n\n    _this2 = _super2.call(this, intl, changeDetectorRef, defaults);\n\n    if (defaults && defaults.formFieldAppearance != null) {\n      _this2._formFieldAppearance = defaults.formFieldAppearance;\n    }\n\n    return _this2;\n  }\n\n  return MatPaginator;\n}(_MatPaginatorBase);\n\nMatPaginator.ɵfac = function MatPaginator_Factory(t) {\n  return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8));\n};\n\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatPaginator,\n  selectors: [[\"mat-paginator\"]],\n  hostAttrs: [1, \"mat-paginator\"],\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matPaginator\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 14,\n  vars: 14,\n  consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n  template: function MatPaginator_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n      ɵngcc0.ɵɵtext(5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n      ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n        return ctx.previousPage();\n      });\n      ɵngcc0.ɵɵnamespaceSVG();\n      ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n      ɵngcc0.ɵɵelement(9, \"path\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵnamespaceHTML();\n      ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n      ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n        return ctx.nextPage();\n      });\n      ɵngcc0.ɵɵnamespaceSVG();\n      ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n      ɵngcc0.ɵɵelement(12, \"path\", 10);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption],\n  styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatPaginator.ctorParameters = function () {\n  return [{\n    type: MatPaginatorIntl\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n    type: Component,\n    args: [{\n      selector: 'mat-paginator',\n      exportAs: 'matPaginator',\n      template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-paginator'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: MatPaginatorIntl\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatPaginatorModule = function MatPaginatorModule() {\n  _classCallCheck(this, MatPaginatorModule);\n};\n\nMatPaginatorModule.ɵfac = function MatPaginatorModule_Factory(t) {\n  return new (t || MatPaginatorModule)();\n};\n\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatPaginatorModule\n});\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_PAGINATOR_INTL_PROVIDER],\n  imports: [[CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, {\n    declarations: function declarations() {\n      return [MatPaginator];\n    },\n    imports: function imports() {\n      return [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatPaginator];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule],\n      exports: [MatPaginator],\n      declarations: [MatPaginator],\n      providers: [MAT_PAGINATOR_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase }; //# sourceMappingURL=paginator.js.map","map":{"version":3,"sources":["/Users/mohammedelmourabit/xrp/xpr/node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js"],"names":["CommonModule","ɵɵdefineInjectable","Injectable","Optional","SkipSelf","InjectionToken","EventEmitter","Directive","ChangeDetectorRef","Input","Output","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","NgModule","mixinDisabled","mixinInitialized","MatCommonModule","MatButtonModule","MatSelectModule","MatTooltipModule","coerceNumberProperty","coerceBooleanProperty","Subject","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","pageSizeOption_r6","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","MatPaginator_div_2_mat_form_field_3_Template","_r8","ɵɵgetCurrentView","ɵɵlistener","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","$event","ɵɵrestoreView","ctx_r7","ɵɵnextContext","_changePageSize","value","ɵɵtemplate","ctx_r3","_formFieldAppearance","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","ɵɵtextInterpolate","MatPaginator_div_2_Template","ctx_r0","length","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","ɵɵnamespaceSVG","ɵɵelement","ctx_r1","firstPageLabel","_previousButtonsDisabled","ɵɵattribute","MatPaginator_button_13_Template","_r12","ɵɵnamespaceHTML","MatPaginator_button_13_Template_button_click_0_listener","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","ɵfac","MatPaginatorIntl_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorMixinBase","_MatPaginatorMixinBase","_MatPaginatorBase","_changeDetectorRef","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_updateDisplayedPageSizeOptions","map","p","_initialized","_markInitialized","unsubscribe","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","push","sort","a","b","emit","_MatPaginatorBase_Factory","ɵɵdirectiveInject","undefined","ɵdir","ɵɵdefineDirective","inputs","outputs","features","ɵɵInheritDefinitionFeature","ctorParameters","propDecorators","MatPaginator","intl","changeDetectorRef","formFieldAppearance","MatPaginator_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","exportAs","decls","vars","consts","template","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","directives","NgIf","MatButton","MatTooltip","MatFormField","MatSelect","NgForOf","MatOption","styles","encapsulation","changeDetection","decorators","selector","host","OnPush","None","MatPaginatorModule","MatPaginatorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\nMatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nclass MatPaginatorMixinBase {\n}\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(MatPaginatorMixinBase));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) { return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatPaginatorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatPaginatorBase, inputs: { pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatPaginatorBase.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined }\n];\n_MatPaginatorBase.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatPaginatorBase, [{\n        type: Directive\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); };\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatCommonModule]; }, exports: function () { return [MatPaginator]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                    MatCommonModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n\n//# sourceMappingURL=paginator.js.map"]},"metadata":{},"sourceType":"module"}